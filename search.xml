<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>b站视频分享</title>
    <url>/2017/11/17/b%E7%AB%99%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=414001980&bvid=BV1TV411z7aB&cid=218691406&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div><br><a id="more"></a></p>
]]></content>
      <categories>
        <category>分享</category>
      </categories>
      <tags>
        <tag>b站视频</tag>
        <tag>分享</tag>
      </tags>
  </entry>
  <entry>
    <title>English_learning</title>
    <url>/2020/07/31/English-learning/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本处选取于考研真题及专业八级英语真题进行学习，每日进行翻译一篇<br>  其中特殊句式采用不同颜色进行了标记</p>
</blockquote>
<!-- > 
<font face="黑体">我是黑体字</font>
<font face="微软雅黑">我是微软雅黑</font>
<font face="STCAIYUN">我是华文彩云</font>
<font color=red>我是红色</font>
<font color=#008000>我是绿色</font>
<font color=Blue>我是蓝色</font>
<font size=5>我是尺寸</font>
<font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font> -->
<a id="more"></a>
<h1 id="第一篇"><a href="#第一篇" class="headerlink" title=" 第一篇 "></a><center> 第一篇 </center></h1><h3 id="2020-07-31"><a href="#2020-07-31" class="headerlink" title="2020_07_31"></a><p align="right">2020_07_31</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;It was 3:45 in the morning when the vote was finally taken. After six months of arguing and final 16 hours of hot parliamentary debates, Australia’s Northern Territory became the first legal authority in the world to allow doctors to take the lives of <font face="黑体" color=yellow size=4>incurably ill patients who wish to die.</font> The measure passed by the convincing vote of 15 to 10. Almost immediately word flashed on the Internet and was picked up, half a world away, <font face="黑体" color=red size=4>by John Hofsess, executive director of the Right to Die Society of Canada.</font> He sent it on by way of the group’s online service, Death NET. Says Hofsess: <font face="黑体" color=green size=4>“We posted bulletins all day long, because of course this isn’t just something that happened in Australia. It’s world history.”</font>

<p>&nbsp;&nbsp;直到凌晨3:45分的时候投票才最终被确定。经过四个小时的争论和最后16个小时的议会讨论，澳大利亚北方地区成为世界上第一个允许医生终结那些无法治愈疾病希望死亡人们的生命的合法当局。这个措施以一个令人信服的投票比15:10通过。几乎这个消息立刻被显示到了网上，被John Hofsess加拿大有权死亡协会执行性理事得知。他通过组织的网络服务器将这条信息发布到了死亡网上。John Hofsess说我们长时间的发布公告，因为当然这不仅仅是一些发生在澳大利亚的事情，这是世界的历史时刻。</p>
<p>&nbsp;&nbsp; The full import may take a while to sink in. The NT Rights of the Terminally Ill Law has left physicians and citizens alike trying to deal with its moral and practical implications. <font face="黑体" color=yellow size=4>Some have breathed sighs of relief, others, including churches, right-to-life groups and the Australian Medical Association, bitterly attacked the bill and the hurry of its passage.</font> But the tide is unlikely to turn back. In Australia—where an aging population, life-extending technology and changing community attitudes have all played their part—other states are going to consider making a similar law to deal with euthanasia (安乐死). In the US and Canada, where the right-to-die movement is gathering strength, observers are waiting for the dominoes (多米诺骨牌) to start falling.</p>
<p>&nbsp;&nbsp;完全的理解可能需要一定的时间。晚期病人澳大利亚北方当局权利法案已经让医生和市民试图去解决他的到的和实际的影响。一些人如释重负，其他人包括教堂，生命正确组织和澳大利亚医学会，强烈地抨击这项法案和这项法案的仓促通过。但是这种趋势已经无法扭转。在澳大利亚验证老龄化的地区，生命羊场技术和改变社区态度已经扮演好了他们的角色，其他州正在考虑实施一个相似度法律去解决安乐死。在美国和加拿大死亡有道运动正在增长能量，观察者正在等待着多米诺骨牌效应开始崩塌。</p>
<p>&nbsp;&nbsp;Under the new Northern Territory law, <font face="黑体" color=red size=4>an adult patient can request death — probably by a deadly injection or pill — to put an end to suffering. The patient must be diagnosed (诊断) as Terminally Ill by two doctors.</font> After a “cooling off” period of seven days, the patient can sign a certificate of request. After 48 hours the wish for death can be met. For Lloyd Nickson, a 54-year-old Darwin resident suffering from lung cancer, the NT Rights of Terminally Ill Law means he can get on with living without the haunting fear of his suffering: a terrifying death from his breathing condition. “I’m not afraid of dying from a spiritual point of view, but what I was afraid of was how I’d go, because I’ve watched people die in the hospital fighting for oxygen and clawing at their masks,” he says.</p>
<p>&nbsp;&nbsp;在新北方当局权利法案下，一个成年患者可以请求死亡，可能是通过注射或者药物去终结这种苦难。病人一定要同时被两名医生被诊断为晚期疾病。在一个星期的“冷静期”后，换这可以签署一份请求确认书。在48小时后死亡的愿望将被得以满足。对于Lloyd Nickson一个54岁 Darwin（达尔文市）市民正在遭受肺癌的苦难，澳大利亚北方当局晚期病人权利法案意味着他能够继续生活不用魂牵梦萦的恐惧这种苦难- -一个因为呼吸状况导致的可怕死亡。他说:“从心灵一个点去看，我并不害怕死亡，但是我十分担心我是怎么走的，因为我曾经看到人们死在医院里为了氧气而斗争用手抓他们的面具”</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第二篇"><a href="#第二篇" class="headerlink" title=" 第二篇 "></a><center> 第二篇 </center></h1><h3 id="2020-08-01"><a href="#2020-08-01" class="headerlink" title="2020_08_01"></a><p align="right">2020_08_01</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;Much of the language used to describe monetary policy, such as steering the economy to a soft landing or a touch on the brakes, makes itself sound like a precise science. Nothing could be further from the truth. <font face="黑体" color=red size=4>The link between interest rates and inflation is uncertain. And there are long, variable lags before policy changes have any effect on the economy. </font><font face="黑体" color=yellow size=4>Hence there is an analogy that likens the conduct of monetary policy to driving a car with a blackened windscreen, a cracked rearview mirror and a faulty steering wheel.</font>

<p>&nbsp;&nbsp;很多的语言被用来描述货币政策，例如引导经济软着陆、轻踩刹车，让这听起来像一个<br>清晰的科学，没有什么能够比真想离的更远了。在利率和通货膨胀率之间的关系是不确定的。因此货币政策的改变影响经济上有很长的随机的滞后。所以这里有一个类比说货币政策的实施就像开着一辆有破挡风玻璃、一个破裂的后视镜和一个有问题的方向盘的车。</p>
<p>&nbsp;&nbsp;Given all these disadvantages, central bankers seem to have had much to boast about of late. <font face="黑体" color=green size=4>Average inflation in the big seven industrial economies fell to a mere 2.3% last year, close to its lowest level in 30 years, before rising slightly to 2.5% this July.</font> This is a long way below the double-digit rates which many countries experienced in the 1970s and early 1980s.</p>
<p>&nbsp;&nbsp;考虑到这些不利条件，中央银行似乎有很多值得夸耀的地方。去年，七月在轻微的增长百分之2.5之前，七大工业国经济平均通货膨胀率下降到2.3，接近他们三十年时间里的最低点。这远低于许多国家在1970-1980年代初经历的两位数利率。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=pink size=4>It is also less than most forecasters had predicted. In late 1994 the panel of economists which The Economist polls each month said that America’s inflation rate would average 3.5% in 1995. </font>In fact, it fell to 2.6% in August, and is expected to average only about 3% for the year as a whole. In Britain and Japan inflation is running half a percentage point below the rate predicted at the end of last year. This is no flash in the pan; over the past couple of years, inflation has been consistently lower than expected in Britain and America.</p>
<p>&nbsp;&nbsp; 这也低于大多数预测者的预测，在1994年年末经济学家每月进行调查的经济学家小组说，1995年美国的通货膨胀率平均为3.5.事实上，他在八月跌落到2.6，并且它整年的期望平均仅仅只有大约百分之3.5，在英国和日本通货膨胀利率点低于在去年年末预测值的0.5个百分点。这不是盘子里的一个闪光点，在过去的几年里，英国和美国的通货膨胀率持续低于它的预期值。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=purple size=4>Economists have been particularly surprised by favourable inflation figures in Britain and the United States, since conventional measures suggest that both economies, and especially America’s, have little productive slack.</font> America’s capacity utilisation, for example, hit historically high levels earlier this year, and its jobless rate (5.6% in August) has fallen below most estimates of the natural rate of unemployment-the rate below which inflation has taken off on the past.</p>
<p>&nbsp;&nbsp;经济学家对英国和美国有利的通货膨胀数字感到特别惊讶，因为传统的措施建议说经济尤其是美国有很少的生产萧条。美国能源利用率，举个例子，在早几年的时候达到了历史的最高值，并且他的失业率降低到了大多数估计值（8月5.6%）跌落到了大多数自然失业率估计值，在过去如果失业率低于自然失业率通货膨胀将会起跳。</p>
<p>&nbsp;&nbsp;Why has inflation proved so mild? <font face="黑体" color=red size=4>The most thrilling explanation is, unfortunately, a little defective. Some economists argue that powerful structural changes in the world have upended the old economic models that were based upon the historical link between growth and inflation.</font></p>
<p>&nbsp;&nbsp;为什么通货膨胀率检测的如此温和？最令人兴奋的解释是不幸的是有一些缺陷。一些经济学家争辩说世界上强有力的结构性改变，颠倒了旧的经济形势基于关于增长和通货膨胀之间的历史联系。</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第三篇"><a href="#第三篇" class="headerlink" title=" 第三篇 "></a><center> 第三篇 </center></h1><h3 id="2020-08-03"><a href="#2020-08-03" class="headerlink" title="2020_08_03"></a><p align="right">2020_08_03</p></h3><font face="黑体" color=black size=4>

&nbsp;&nbsp;In the first year or so of Web business, most of the action has revolved around efforts to Lap the consumer market. More recently, as the Web proved to be more than a fashion. companies have started to buy and sell products and services with one another. Such business-to-business sales make sense because business people typically know what product they’re looking for.

&nbsp;&nbsp;大约在电子商务的第一年，大多数的行为都是围绕顾客市场的努力。最近，网站证明是不仅仅是时尚。公司开始相互的去购买、销售产品和服务。例如，公司对公司的销售因为"老板通常都知道他们需要的产品是什么？"而有意义。

&nbsp;&nbsp;Nonetheless, many companies still hesitate to use the Web because of doubts about its reliability. "Businesses need to feel they can trust the pathway between them and the supplier," says senior analyst Blane Erwin of Forrester Research. Some companies are limiting the risk by conducting online transactions only with established business partners who are given access to the company's private intranet.

&nbsp;&nbsp;虽然如此，很多的公司仍然犹豫去利用网络因为对他的可靠性表示怀疑。福雷斯特研究公司的高级分析师布兰·埃温说：“公司需要去感到他们能够想象他们和供货商之间的信任”。一些公司限制于风险，只和已经建立的且提供公司特殊网络通道的生意伙伴引导网络接口。

&nbsp;&nbsp;Another major shift in the model for Internet commerce concerns the technology available for marketing. Until recently, Internet marketing activities have focused on strategies to "pull" customers into sites. In the past year, however, software companies have developed tools chat allow companies to "push" information directly out to consumers, transmitting marketing messages directly to targeted customers, Most notably, the Pointcast Network uses a screen saver to deliver a continually updated stream of news and advertisements to subscribers' computer monitors. Subscribers can customize the information they want to receive and proceed directly to a company's Web site. Companies such as Virtual Vineyards are already starting to use similar technologies to push messages to customers about special sales, product offering, or other events.But push technology has earned the contempt of many Web users.<font face="黑体" color=yellow size=4> Online culture thinks highly of the notion that the information flowing onto the screen comes there by specific request. </font>  Once commercial promotion begins to fill the screen uninvited, the distinction between the Web and television fades. Thar's a prospect that horrifies Net purists.

&nbsp;&nbsp;互联网商业模式的另一个重大转变涉及可用于营销的技术。直到最近，互联网市场活动关注于直接拉顾客到网页中。在过去的几年里，虽然软件公司建立工具让公司交流去直接推送信息给顾客，直接向目标客服传递营销信息。订阅者可以自定义他们想要接收的信息，并直接进入公司网站。最值得注意的是，定点广播网站用一系列的节约装置去投递关于向订阅者的计算机广告，新闻和广告持续的更新数据。订阅者可以定制他们想要的信息和直接进入他们的公司网站。公司例如虚拟Vineyards已经准备好开始用一个相似的技术去推送关于特殊销售的信息给顾客。产品的提供和其他事件，但是推送技术已经遭到了很多网民的蔑视。网络文化将信息流入屏幕通过特殊的请求的概念看的很高。一旦商业的提升开始未经邀请的充满屏幕，网络和电视的边界将会逐渐消失。这是一个可怕的网络纯粹主义者的前景。 



&nbsp;&nbsp;But it is hardly inevitable that companies on the Web will need to resort to push strategies to make money, The examples of Virtual Vineyards, Amazon.com and other pioneers show that a Web site selling the right. kind of products with the right mix of interactivity, hospitality, and security will attract online customers, And the cost of computing power continues to free fall, which is a good sign for any enterprise setting up shop m silicon. People looking back 5 or 10 years from now may well wonder why so few companies took the online plunge.

&nbsp;&nbsp;但是这是十分困难的不可避免的说网络公司将需要去求助于直接推送获取利益，例如虚拟葡萄园、亚马逊和其他开发者表明了网站销售正确性。具有正确的交互性组合产品，医疗和安全将会吸引网络顾客，并且计算机成本消耗的持续降低，这对于任何一个商家建立自己的网络商店都是好的标志。人们从现在开始回顾过去的五到十年可能会怀疑为什么如此少的公司在网上投入。

</font>

<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第四篇"><a href="#第四篇" class="headerlink" title=" 第四篇 "></a><center> 第四篇 </center></h1><h3 id="2020-08-04"><a href="#2020-08-04" class="headerlink" title="2020_08_04"></a><p align="right">2020_08_04</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;In the last half of the nineteenth century .<font face="黑体" color=pink size=4>"capital" and "labour" were enlarging and perfecting their rival organisations on modern lines. </font><font face="黑体" color=red size=4>Many an old firm was replaced by a limited liability company with a bureaucracy of salaried managers. </font> <font face="黑体" color=yellow size=4>The change met the technical requirements of the new age by engaging a large professional element and prevented the decline in efficiency that so commonly spoiled the fortunes of family firms in the second and third generation after the energetic founders. </font> It was moreover a step away from individual initiative, towards collectivism and municipal and state-owned business. The railway companies, though still private business managed for the benefit of shareholders, were very unlike old family business. <font face="黑体" color=green size=4>At the same time the great municipalities went into business to supply lighting, trams and other services to the taxpayers.</font> 

<p>&nbsp;&nbsp;在19世纪下半叶，资本和劳工都在以现代的方式扩充和完善他们的对立机构。很多老的公司（坚固）已经被具有领薪经理的行政系统有限责任公司所代替，这种变化符合技术对于新时代通过聘用大量专业群体去防止效率的下降因为通常在精力充沛的创始人后的第二代和第三代会毁掉家族企业的财富)的需求。并且这也是远离个人行动朝向集体主义和市营和国营企业迈出的第一步。铁路企业尽管仍然是为股东利益经营的特殊企业，却十分不像传统的家族企业。在同样的时间里大城市的市政府进也开始从事实业，提供照明、有轨电车和其他服务给纳税人。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=red size=4>The growth of the limited liability company and municipal business had important consequences. Such large, impersonal manipulation of capital and industry greatly increased the numbers and importance of shareholders as a class,</font> an element in national life representing irresponsible wealth detached from the land and the duties of the landowners, and almost equally detached from the responsible management of business. All through the nineteenth century, America, Africa, India, Australia and parts of Europe were being developed by British capital, and British shareholders were thus enriched by the world’s movement towards industrialisation. <font face="黑体" color=yellow size=4>Towns like Bournemouth and Eastbourne sprang up to house large “comfortable” classes who had retired on their incomes, </font>and who had no relation to the rest of the community except that of drawing dividends and occasionally attending a shareholders’meeting to dictate their orders to the management. On the other hand “shareholding” meant leisure and freedom which were used by many of the later Victorians for the highest purpose of a great civilization.</p>
<p>&nbsp;&nbsp;有限责任公司的增长和市营企业都有很重要的影响。如此大的，非个人的资本和企业的操纵极大的增加了股东作为一个群体的重要性和数量。国民生活中的一个重要组成部分，代表了不负责任的财富从土地和土地所有者的责任中分开。全部通过十九世纪，美国，非洲，印度和澳大利亚和部分的欧洲正在通过英国的资本建立，并且英国股东相信通过世界工业化运动将会变的富有。像B和E两座城市迅速崛起，给大量那些通过收入退休和那些与群体没有关系除了领取股票利息和偶尔的参加股东会议向主管人员指定他们的命令，的“舒适”群体定居。在另一反面，股权意味着闲暇和自由，这也习惯于被很多维多利亚末期人民认为是伟大文明的最高目标。</p>
<p>&nbsp;&nbsp;<font face="黑体" color=pink size=4>The “shareholders” as such had no knowledge of the lives, thoughts or needs of the workmen employed by the company in which be held shares, and his influence on the relations of capital and labour was not good. </font>The paid manager acting for the company was in more direct relation with the men and their demands,<font face="黑体" color=green size=4>but even be had seldom that familiar personal knowledge of’ the workmen which the employer had often had under the more patriarchal system of the old family business now passing away. </font>Indeed the mere size of operations and the numbers of workmen involved rendered such personal relations impossible. Fortunately, however, the increasing power and organisation of the trade unions, at least in all skilled trades, enabled the workmen to meet on equal terms the managers of the companies who employed them. The cruel discipline of the strike and lockout taught the two parties to respect each other’s strength and understand the value of fair negotiation.</p>
<p>&nbsp;&nbsp;严格来说股东对于他们持有股票公司所雇佣的员工的生活，思想和需求没有任何了解，并且他们对资本和劳工之间的的影响并不好。雇佣经理代表公司是一种与雇员和他们决定更加直接的联系，但是尽管如此雇佣经理对工人很少有亲近的个人的了解，而在那些正遭到淘汰的旧式家族家长制企业中，雇主通常对工人的个人情况有非常亲近的了解。确实仅仅是经营规模和员工数量使提供成为这样的个人关系是不可能的。然而幸运的是日益增长的势力和工会组织。至少在技能行业赋予工人在一个平等位置和雇主公司经历进行会谈。罢工和关店残酷的教训教会双方去尊重彼此的能力和理解公平谈判的价值。</p>
<p>&lt;/font&gt;</p>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h1 id="第五篇"><a href="#第五篇" class="headerlink" title=" 第五篇 "></a><center> 第五篇 </center></h1><h3 id="2020-08-05"><a href="#2020-08-05" class="headerlink" title="2020_08_05"></a><p align="right">2020_08_05</p></h3><font face="黑体" color=black size=4>
&nbsp;&nbsp;If you intend using humor in your talk to make people smile, you must know how to identify shared experiences and problems. Your humor must be relevant to the audience and should help to show them that you are one of them or that you understand their situation and are in sympathy with their point of view. Depending on whom you are addressing, the problems will be different.       
If you are talking to a group of managers, you may refer to the disorganized methods of their secretaries; alternatively if you are addressing secretaries, you may want to comment on their disorganized bosses.

&nbsp;&nbsp;如果你想要在你的谈话中利用幽默让人们微笑，你一定知道如何去辨别分享经验和问题。你的幽默必须和听众有关，应该帮助向他们去表明说你是其中之一或者说你理解他们的处境并且对他们的观点表示同情。取决于你的地址，问题将会变的不一样。如果你谈话的是组织的管理者，你可能指的是他们秘书杂乱无章的地方，或者如果你跟秘书谈话，你可能想要去评价他们杂乱无章的老板。

&nbsp;&nbsp;Here is an example, which I heard at a nurses' convention, of a story which works well because the audience all shared the same view of doctors. A man arrives in heaven and is being shown around by St. Peter. He sees wonderful accommodations, beautiful gardens, sunny weather, and so on. Everyone is very peaceful, polite and friendly until, waiting in a line for lunch, the new arrival is suddenly pushed aside by a man in a black coat, who rushes to the head of the line, grabs his food and stomps over to a table by himself. "Who is that?" the new arrival asked St. Peter. "Oh, that's God." came the reply, "but sometimes he thinks he's a doctor."

&nbsp;&nbsp;这里是一个例子，我曾经在护士的谈话中听到，一个十分有用的故事因为听众都在分享关于医生的相同观点。有一个人到达天堂并且被StP带着四处逛逛。他看到完美的诊疗室，美丽的花园，阳关灿烂的天气等等。每个人都十分的祥和，有礼貌并且友善，直到在排队等待午饭的时候，一个穿着白色大衣的新到达者冲到队伍最前方突然推开他在一旁，抓住他的食物并且快速一个人跺着脚走到一张桌子旁。”那是谁？”新来的人问圣彼得。”“哦，那是上帝。”回答说，“但有时他认为自己是个医生。”

&nbsp;&nbsp;If you are part of the group which you are addressing, you will be in a position to know the experiences and problems which are common to all of you and it'll be appropriate for you to make a passing remark about the inedible canteen food or the chairman's notorious bad taste in ties. With other audiences you mustn't attempt to cut in with humor as they will resent an outsider making disparaging remarks about their canteen or their chairman. You will be on safer ground if you stick to scapegoats like the Post Office or the telephone system.

&nbsp;&nbsp;如果你是正在谈论组织的一份子，你将会在一个位置去知道所有你相同的经验和问题，并且这将会很适合你去做一个关于食堂难以下咽的食物通过的评价，或者领导臭名昭著对于领带的坏品味。伴随着其他的听众，你一定不要试图插入幽默当他们将要憎恨一个局外人对他们的食堂或他们的主席说贬义的话。你将会处于一个安全的组织如果你选择当一个像邮局和电话系统一样的替罪羊。




&nbsp;&nbsp;If you feel awkward being humorous, you must practice so that it becomes more natural. Include a few casual and apparently off-the-cuff(即兴的)remarks which you can deliver in a relaxed and unforced manner. Often it's the delivery which causes the audience to smile, so speak slowly and remember that a raised eyebrow or an unbelieving look may help to show that you are making a light-hearted remark.

&nbsp;&nbsp;如果你感觉明白了幽默，你一定要练习以便这将会变的自然。包括一些随意的，明显是即兴的评价，你可以用轻松和不受强迫的方式表达出来。通常是演讲让听众微笑。所以说慢点并且记住说扬起眉毛或是一个不相信的表情可能有助于表明你在说轻松愉快的话。

&nbsp;&nbsp;Look for the humor. It often comes from the unexpected. A twist on a familiar quote "If at first you don't succeed, give up" or a play on words or on a situation. Search for exaggeration and understatements. Look at your talk and pick out a few words or sentences which you can turn about and inject with humor.

&nbsp;&nbsp;寻找幽默，他总是来源于意想不到。一对双胞胎在一个熟悉的引语“如果在你第一次没有成功，放弃”，或者玩弄语言或情境。寻找夸张和轻描淡写。观察你的言论选取一些语言或者你可以再说一次并且注入幽默的句子。



</font>

<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>英语阅读</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>linux嵌入式开发_1</title>
    <url>/2020/07/30/linux%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="linux基础"><a href="#linux基础" class="headerlink" title="linux基础"></a><strong>linux基础</strong></h1><h2 id="linux是什么？"><a href="#linux是什么？" class="headerlink" title="linux是什么？"></a>linux是什么？</h2><a id="more"></a>
<ul>
<li>linux是一款开源操作系统，开放了整组的调用接口给程序猿进行开发和使用。linux操作系统包含内核和系统调用，并不包含应用程序。由于linux的架构继承了unix良好传统，因此越来越多的开发者选择使用linux并为之设计了许多应用级软件。</li>
</ul>
<h2 id="开发环境的搭建"><a href="#开发环境的搭建" class="headerlink" title="开发环境的搭建"></a>开发环境的搭建</h2><ul>
<li>开发环境需要用到交叉开发模式，这一点书上有很详细的介绍，包括硬件环境和软件环境的构建都写的十分清楚，所以这篇文章主要是写一下我在中间遇到的一些问题以及解决方法。虚拟机的话我用的是Ubuntu18.04版本，安装虚拟机啥的网上资源很多，直接百度就行。</li>
</ul>
<h2 id="linux下的环境搭建"><a href="#linux下的环境搭建" class="headerlink" title="linux下的环境搭建"></a>linux下的环境搭建</h2><h3 id="1、修改Ubuntu的一些配置"><a href="#1、修改Ubuntu的一些配置" class="headerlink" title="1、修改Ubuntu的一些配置"></a>1、修改Ubuntu的一些配置</h3><ul>
<li><p>切换国内镜像源</p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp; 在使用apt命令安装包时，因为系统自带下载源在国外服务器上，所以需要切换为国内镜像源才能提升下载速度。这里有一篇博客详细说明了如何直接根据终端命令修改其配置文件，从而达到修改下载源的目的.或者，，，，你也可以直接用Ubuntu的图形界面去修改，步骤如下： 显示应用程序-&gt;软件和更新-&gt;下载自主服务器改为其他，然后选择合适的镜像源就行了，这里我选择的是阿里的镜像源。</p>
</li>
<li><p>修改语言和设置汉语输入法</p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp; 懒得写，直接贴别人博客了</p>
</li>
</ul>
<p>&ensp;&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/langshi_2011/article/details/78993781" target="_blank" rel="noopener">Linux Ubuntu系统设置成中文语言</a></p>
<p>&ensp;&ensp;&ensp;&ensp;&ensp;<a href="https://blog.csdn.net/sparkstrike/article/details/81487271" target="_blank" rel="noopener">Linux.Ubuntu.中文输入法设置</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>嵌入式开发</tag>
        <tag>鸟哥的私房菜学习</tag>
      </tags>
  </entry>
  <entry>
    <title>c++_常用语法</title>
    <url>/2020/07/31/c/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-常用语法"><a href="#C-常用语法" class="headerlink" title="C++常用语法"></a><center>C++常用语法</center></h1><h3 id="2020-08-01"><a href="#2020-08-01" class="headerlink" title="2020_08_01"></a><p align="right">2020_08_01</p></h3><blockquote>
<p>此文主要针对有c语言基础的人。</p>
</blockquote>
<h2 id="1-基本语法"><a href="#1-基本语法" class="headerlink" title="1. 基本语法"></a>1. 基本语法</h2><a id="more"></a>
<ul>
<li><font face="黑体" color=black size=4>对象 - 对象具有状态和行为。例如：一个人的状态 --- 样貌、姓名、出生地、所在地、年龄、身高等。 行为--- 吃饭、工作、学习、运动、游泳等。因而对象是类的实例。</font></li>
<li><font face="黑体" color=black size=4>类 - 类可以定义为描述对象行为/状态的模板/蓝图。
类---一种描述对象行为的框架、一种状态模板、蓝图。</font></li>
<li><font face="黑体" color=black size=4>方法 —- 方法其实可以说就是一种行为，一个类可以包含多个方法。并且可以在方法中写入逻辑操作数据以及执行所有的动作。/font&gt; </li>
<li><font face="黑体" color=black size=4>即时变量 - 每个对象都有其独特的即时变量。对象的状态是由这些即时变量的值创建的。</font>


</li>
</ul>
<h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2. 数据类型"></a>2. 数据类型</h2><p>&nbsp;&nbsp;基本类型：bool, char, int, float, double, void, wchar_t</p>
<p>&nbsp;&nbsp;修饰：signed, unsigned, short, long</p>
<p>&nbsp;&nbsp;typedef可以位已经有的类型取一个新的名字</p>
<p><code>typedef int feet //feet定义为int的新名子</code></p>
<h4 id="enum枚举类型"><a href="#enum枚举类型" class="headerlink" title="enum枚举类型"></a>enum枚举类型</h4><p>&nbsp;&nbsp;定义枚举常量的集合，一个变量只有几种可能的值。<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">enum 枚举名&#123; 标识符[&#x3D;整型常数], </span><br><span class="line">            标识符[&#x3D;整型常数], </span><br><span class="line">            ...</span><br><span class="line">            标识符[&#x3D;整型常数]</span><br><span class="line">           &#125; 枚举变量;</span><br></pre></td></tr></table></figure></p>
<h3 id="key-point"><a href="#key-point" class="headerlink" title="key point:"></a>key point:</h3><ul>
<li>如果枚举没有初始化, 即省掉”=整型常数”时, 则从第一个标识符开始.</li>
<li>默认情况下，第一个名称的值为 0，第二个名称的值为 1，第三个名称的值为 2，以此类推。但是，您也可以给名称赋予一个特殊的值，只需要添加一个初始值即可。</li>
<li>因为默认情况下，每个名称都会比它前面一个名称大 1.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">enum color &#123; red,green&#x3D;5,blue &#125;;</span><br></pre></td></tr></table></figure>
<h3 id="nbsp-nbsp-以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。"><a href="#nbsp-nbsp-以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。" class="headerlink" title="&nbsp;&nbsp;以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。"></a>&nbsp;&nbsp;以下是该用法的实例。此例中，red值为0，green值为5，blue值为6。</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    enum days&#123;one, two, three&#125;day;</span><br><span class="line">    day &#x3D; one;</span><br><span class="line">    switch(day)&#123;</span><br><span class="line">        case one:</span><br><span class="line">            cout &lt;&lt; &quot;one&quot; &lt;&lt; endl;</span><br><span class="line">            break;</span><br><span class="line">        case two:</span><br><span class="line">            cout &lt;&lt; &quot;two&quot; &lt;&lt; endl;</span><br><span class="line">            break;</span><br><span class="line">        default:</span><br><span class="line">            cout &lt;&lt; &quot;three&quot; &lt;&lt; endl;</span><br><span class="line">            break;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-变量类型"><a href="#3-变量类型" class="headerlink" title="3. 变量类型"></a>3. 变量类型</h2>&nbsp;&nbsp; 大小写敏感，必须以字母或下划线开头。</li>
</ul>
<p>Lvalues &amp; Rvalues</p>
<p>&nbsp;&nbsp; lvalues: 指向内存位置的表达式，左值可以出现在赋值号的左边或右边</p>
<p>&nbsp;&nbsp; rvalues: 指存储在内存中某些地址的数值。右值不能对其进行赋值操作，可以出现在赋值号的右边，但是不能出现在左边。</p>
<h2 id="4-常量"><a href="#4-常量" class="headerlink" title="4. 常量"></a>4. 常量</h2><h3 id="定义方法：-define-和const"><a href="#定义方法：-define-和const" class="headerlink" title="定义方法：#define 和const"></a>定义方法：#define 和const</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#define identifier value</span><br><span class="line">const type variable &#x3D; value;</span><br></pre></td></tr></table></figure>
<ol>
<li>修饰符类型</li>
</ol>
<div class="table-container">
<table>
<thead>
<tr>
<th><center> 限定符</center></th>
<th><center>含义  </center></th>
</tr>
</thead>
<tbody>
<tr>
<td><center> const</td>
<td><center> const类型的对象在程序执行期间不能被修改改变。</td>
</tr>
<tr>
<td>volatile</td>
<td>修饰符 volatile 告诉编译器，变量的值可能以程序未明确指定的方式被改变。</td>
</tr>
<tr>
<td>restrict</td>
<td>由 restrict 修饰的指针是唯一一种访问它所指向的对象的方式。只有 C99 增加了新的类型限定符 restrict。</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;<br>&nbsp;</p>
<h3 id="更多内容请参考C-参考文档"><a href="#更多内容请参考C-参考文档" class="headerlink" title="更多内容请参考C++参考文档"></a><p align="right">更多内容请参考<a href="https://www.runoob.com/cplusplus/cpp-tutorial.html" target="_blank" rel="noopener">C++参考文档</a></h3>]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>程序设计</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo插入视频代码块及音频</title>
    <url>/2020/11/24/hexo-b%E7%AB%99%E8%A7%86%E9%A2%91%E5%88%86%E4%BA%AB%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hexo插件安装插入视频代码块及音频"><a href="#hexo插件安装插入视频代码块及音频" class="headerlink" title="hexo插件安装插入视频代码块及音频"></a><center>hexo插件安装插入视频代码块及音频</center></h1><h2 id="1-hexo插件安装"><a href="#1-hexo插件安装" class="headerlink" title="1.hexo插件安装"></a>1.hexo插件安装</h2><p>使用 Hexo 插件插入音乐/视频<br>两个好用的hexo插件：</p>
<p>**hexo-tag-aplayer：<a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="noopener">https://github.com/grzhan/hexo-tag-aplayer</a>)</p>
<p>**hexo-tag-dplayer： <a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">https://github.com/NextMoe/hexo-tag-dplayer</a></p>
<h3 id="1-1-播放音乐的aplayer"><a href="#1-1-播放音乐的aplayer" class="headerlink" title="1.1 播放音乐的aplayer"></a>1.1 播放音乐的aplayer</h3><p>  在cmd页面内，使用npm安装：</p>
<blockquote>
<p>npm install hexo-tag-aplayer</p>
<h3 id="1-2-播放视频的dplayer"><a href="#1-2-播放视频的dplayer" class="headerlink" title="1.2 播放视频的dplayer"></a>1.2 播放视频的dplayer</h3><p>  在cmd页面内，使用npm安装：<br>npm install hexo-tag-dplayer</p>
</blockquote>
<h1 id="hexo插入网易云音乐"><a href="#hexo插入网易云音乐" class="headerlink" title="hexo插入网易云音乐"></a><center>hexo插入网易云音乐</center></h1><h2 id="1-提取音乐的代码块"><a href="#1-提取音乐的代码块" class="headerlink" title="1.提取音乐的代码块"></a>1.提取音乐的代码块</h2><ol>
<li>进入<a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>搜索你想要的音乐。（以“下雨天”为例）。</li>
<li>检索后进入<a href="https://music.163.com/#/outchain/2/368764/" target="_blank" rel="noopener">下雨天</a>页面，点击分享。</li>
<li>复制该处代码</li>
</ol>
<center>
<img src="https://www.codekp.cn/download/img/bilibili/网易云音乐.JPG" width = "400" height = "302" alt="图片名称" align=center / loading="lazy">
</center>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe frameborder&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; marginwidth&#x3D;&quot;0&quot; marginheight&#x3D;&quot;0&quot; width&#x3D;530 height&#x3D;86 src&#x3D;&quot;&#x2F;&#x2F;music.163.com&#x2F;outchain&#x2F;player?type&#x3D;2&amp;id&#x3D;368764&amp;auto&#x3D;1&amp;height&#x3D;66&quot;&gt;&lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>
<p>直接将其放在你的markdown文件中，即可显示音乐，如下所示：</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=530 height=86 src="//music.163.com/outchain/player?type=2&id=368764&auto=1&height=66"></iframe>




<h1 id="hexo插入bilibili视频代码块"><a href="#hexo插入bilibili视频代码块" class="headerlink" title="hexo插入bilibili视频代码块"></a><center>hexo插入bilibili视频代码块</center></h1><h2 id="1-提取视频的代码块"><a href="#1-提取视频的代码块" class="headerlink" title="1.提取视频的代码块"></a>1.提取视频的代码块</h2><ol>
<li>进入<a href="https://www.bilibili.com/" target="_blank" rel="noopener">bilibili</a>搜索你想要的视频。（以“回形针PaperClip你的 App 为什么知道你想买什么？”为例）。</li>
<li>检索后进入<a href="https://www.bilibili.com/video/BV17t411p7gx?from=search&amp;seid=11485789333728231707" target="_blank" rel="noopener">回形针PaperClip你的 App 为什么知道你想买什么</a>页面，点击分享。</li>
<li>复制代码块处代码</li>
</ol>
<center>
<img src="https://www.codekp.cn/download/img/bilibili/分享.png" width = "400" height = "302" alt="图片名称" align=center / loading="lazy">
</center>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;iframe src&#x3D;&quot;&#x2F;&#x2F;player.bilibili.com&#x2F;player.html?aid&#x3D;40891962&amp;bvid&#x3D;BV17t411p7gx&amp;cid&#x3D;71826908&amp;page&#x3D;1&quot; scrolling&#x3D;&quot;no&quot; border&#x3D;&quot;0&quot; frameborder&#x3D;&quot;no&quot; framespacing&#x3D;&quot;0&quot; allowfullscreen&#x3D;&quot;true&quot;&gt; &lt;&#x2F;iframe&gt;</span><br></pre></td></tr></table></figure>
<p>直接将其放在你的markdown文件中，即可显示b站视频，但是会发现视频比较小，如下所示：</p>
<iframe src="//player.bilibili.com/player.html?aid=40891962&bvid=BV17t411p7gx&cid=71826908&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="2-代码块前后修饰"><a href="#2-代码块前后修饰" class="headerlink" title="2.代码块前后修饰"></a>2.代码块前后修饰</h2><p>在改代码的前后基础上加上</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div style&#x3D;&quot;position:relative; padding-bottom:75%; width:100%; height:0&quot;&gt;</span><br><span class="line"></span><br><span class="line"> style&#x3D;&quot;position:absolute; height: 100%; width: 100%;&quot;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
<iframe src="//player.bilibili.com/player.html?aid=40891962&bvid=BV17t411p7gx&cid=71826908&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>


<p>即可将你的视频直接贴在你的文章上。</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><p><a href="https://blog.csdn.net/weixin_41216356/article/details/106911233" target="_blank" rel="noopener">如何在Hugo/Hexo博客中插入响应式Bilibili视频代码块</a><br><a href="https://www.jianshu.com/p/26a7fc7cc185" target="_blank" rel="noopener">Hexo博客中插入音乐/视频/</a></p>
]]></content>
      <categories>
        <category>辅助技术</category>
      </categories>
      <tags>
        <tag>B站</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>信息论一个小实例</title>
    <url>/2020/10/23/%E2%80%9C%E4%B8%8D%E9%97%AE%EF%BC%8C%E7%9F%A5%E4%BD%A0%E5%90%8D%E2%80%9D%E7%9A%84%E7%8E%84%E5%AD%A6%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="不用问知道你名字的玄学问题"><a href="#不用问知道你名字的玄学问题" class="headerlink" title="不用问知道你名字的玄学问题"></a><center>不用问知道你名字的玄学问题</center></h1><a id="more"></a>
<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1.前言"></a>1.前言</h1><p>  不知道大家有没有遇到路边有人问你，不用问你的姓就能知道你姓什么，当然我也遇到了。我怕被要钱就没有问，但后来仔细寻思挺有趣的，到底是什么原理呢，很多人都在网上给出了自己的解释，但在我看来却没有完全解决我的疑惑。近期看信息论有感，感觉是很有智慧的信息编码技术。</p>
<h2 id="2-理论分析"><a href="#2-理论分析" class="headerlink" title="2.理论分析"></a>2.理论分析</h2><h3 id="2-1-信息论"><a href="#2-1-信息论" class="headerlink" title="2.1 信息论"></a>2.1 信息论</h3><p>  这个问题，看起来是一道玄学题，本质上其实是信息论问题。解决这个问题并不是我们的最终目的，我们应该通过这个简单的问题了解信息论的本质，以小见大，一通百通。<br>  信息论可以很好的给一个问题快速找到他的一个边界，每个信息所包含的信息量。最让人吃惊的是信息论的作者在上世纪中叶就给所有人类可以接触的所有信息问题设置了边界。人类遇到的全部都是经典问题，为这种问题设置了一个绝对的边界，无论你怎么设置也不能逾越的一个最大边界。任何人想要压缩数据、用一个事件发生去必然寻找另一个小概率事件所需要的数量等都已经被信息论所决定。<br>  当别人还在寻找问题的解决方案的时候，信息论可以让你迅速从理论角度找到答案，降维打击。让我们知道这个问题的极限在哪里，不需要做很多没意义的工作。<br>  所以我首先给大家介绍一下信息熵。</p>
<h3 id="2-2-信息熵"><a href="#2-2-信息熵" class="headerlink" title="2.2 信息熵"></a>2.2 信息熵</h3><blockquote>
<p>热力学的熵主要指的是：在一个孤立系统中没有外力做功的情况下，该系统的混乱程度（熵）会不断的增大。<br>信息论中的熵则指的是：信息的不确定程度</p>
</blockquote>
<div class="table-container">
<table>
<thead>
<tr>
<th>种类</th>
<th>区别</th>
</tr>
</thead>
<tbody>
<tr>
<td>热力学熵</td>
<td>系统的混乱程度</td>
</tr>
<tr>
<td>信息熵</td>
<td>信息的不确定度</td>
</tr>
</tbody>
</table>
</div>
<p>根据定义我们不难想到，一个信息的出现概率越小，这个信息的熵也就越大。那么举个例子：<br>两个人进行博弈，A和B这两个人如果势均力敌两者获胜的概率都是0.5，则这个两人无论谁获胜，获胜者的熵是:</p>
<script type="math/tex; mode=display">
H(x) =\sum_{i=1}^np_i(x)log_2(\frac 1 {p_i(x)})</script><p>b=2的时候单位是bits<br>上述例子的熵即可简单计算得到为$H(x) =\frac 1 2log_2(\frac 1 {\frac 1 2}))+\frac 1 2log_2(\frac 1 {\frac 1 2}))=1$</p>
<p>而如果两个人的概率并不相等，比如两个人打球一个是乔丹，一个是小白。那小白获胜的概率基本上是百万分之一，那么一旦小白获胜这个事件发生的信息熵是相当大的，也就是这个事件发生的信息论巨大。</p>
<p>因此综上所述：接下来的问题用信息论进行解决。</p>
<h3 id="2-3-百家姓的编码"><a href="#2-3-百家姓的编码" class="headerlink" title="2.3 百家姓的编码"></a>2.3 百家姓的编码</h3><p>有了信息熵的基础，我们现在就可以很容易的将中国500多个姓进行编码，那么就可以很用以的从图片是否有你的姓名这个信息很容易，找到你自己的姓。</p>
<blockquote>
<p>姓名: {“赵”,”钱”,”孙”,”李”,”周”,”吴”,”郑”,”王”,”冯”,”陈”,”褚”,”卫”,”蒋”,”沈”,”韩”,”杨”,”朱”,”秦”,”尤”,”许”,”何”,”吕”,”施”,”张”,”孔”,”曹”,”严”,”华”,”金”,”魏”,”陶”,”姜”,”戚”,”谢”,”邹”,”喻”,”柏”,”水”,”窦”,”章”,”云”,”苏”,”潘”,”葛”,”奚”,”范”,”彭”,”郎”,”鲁”,”韦”,”昌”,”马”,”苗”,”凤”,”花”,”方”,”俞”,”任”,”袁”,”柳”,”酆”,”鲍”,”史”,”唐”,”费”,”廉”,”岑”,”薛”,”雷”,”贺”,”倪”,”汤”,”滕”,”殷”,”罗”,”毕”,”郝”,”邬”,”安”,”常”,”乐”,”于”,”时”,”傅”,”皮”,”卞”,”齐”,”康”,”伍”,”余”,”元”,”卜”,”顾”,”孟”,”平”,”黄”,”和”,”穆”,”萧”,”尹”,”姚”,”邵”,”湛”,”汪”,”祁”,”毛”,”禹”,”狄”,”米”,”贝”,”明”,”臧”,”计”,”伏”,”成”,”戴”,”谈”,”宋”,”茅”,”庞”,”熊”,”纪”,”舒”,”屈”,”项”,”祝”,”董”,”梁”,”杜”,”阮”,”蓝”,”闵”,”席”,”季”,”麻”,”强”,”贾”,”路”,”娄”,”危”,”江”,”童”,”颜”,”郭”,”梅”,”盛”,”林”,”刁”,”钟”,”徐”,”邱”,”骆”,”高”,”夏”,”蔡”,”田”,”樊”,”胡”,”凌”,”霍”,”虞”,”万”,”支”,”柯”,”昝”,”管”,”卢”,”莫”,”经”,”房”,”裘”,”缪”,”干”,”解”,”应”,”宗”,”丁”,”宣”,”贲”,”邓”,”郁”,”单”,”杭”,”洪”,”包”,”诸”,”左”,”石”,”崔”,”吉”,”钮”,”龚”,”程”,”嵇”,”邢”,”滑”,”裴”,”陆”,”荣”,”翁”,”荀”,”羊”,”於”,”惠”,”甄”,”麴”,”家”,”封”,”芮”,”羿”,”储”,”靳”,”汲”,”邴”,”糜”,”松”,”井”,”段”,”富”,”巫”,”乌”,”焦”,”巴”,”弓”,”牧”,”隗”,”山”,”谷”,”车”,”侯”,”宓”,”蓬”,”全”,”郗”,”班”,”仰”,”秋”,”仲”,”伊”,”宫”,”宁”,”仇”,”栾”,”暴”,”甘”,”钭”,”厉”,”戎”,”祖”,”武”,”符”,”刘”,”景”,”詹”,”束”,”龙”,”叶”,”幸”,”司”,”韶”,”郜”,”黎”,”蓟”,”薄”,”印”,”宿”,”白”,”怀”,”蒲”,”邰”,”从”,”鄂”,”索”,”咸”,”籍”,”赖”,”卓”,”蔺”,”屠”,”蒙”,”池”,”乔”,”阴”,”欎”,”胥”,”能”,”苍”,”双”,”闻”,”莘”,”党”,”翟”,”谭”,”贡”,”劳”,”逄”,”姬”,”申”,”扶”,”堵”,”冉”,”宰”,”郦”,”雍”,”舄”,”璩”,”桑”,”桂”,”濮”,”牛”,”寿”,”通”,”边”,”扈”,”燕”,”冀”,”郏”,”浦”,”尚”,”农”,”温”,”别”,”庄”,”晏”,”柴”,”瞿”,”阎”,”充”,”慕”,”连”,”茹”,”习”,”宦”,”艾”,”鱼”,”容”,”向”,”古”,”易”,”慎”,”戈”,”廖”,”庾”,”终”,”暨”,”居”,”衡”,”步”,”都”,”耿”,”满”,”弘”,”匡”,”国”,”文”,”寇”,”广”,”禄”,”阙”,”东”,”殴”,”殳”,”沃”,”利”,”蔚”,”越”,”夔”,”隆”,”师”,”巩”,”厍”,”聂”,”晁”,”勾”,”敖”,”融”,”冷”,”訾”,”辛”,”阚”,”那”,”简”,”饶”,”空”,”曾”,”毋”,”沙”,”乜”,”养”,”鞠”,”须”,”丰”,”巢”,”关”,”蒯”,”相”,”查”,”後”,”荆”,”红”,”游”,”竺”,”权”,”逯”,”盖”,”益”,”桓”,”公”,”万俟”,”司马”,”上官”,”欧阳”,”夏侯”,”诸葛”,”闻人”,”东方”,”赫连”,”皇甫”,”尉迟”,”公羊”,”澹台”,”公冶”,”宗政”,”濮阳”,”淳于”,”单于”,”太叔”,”申屠”,”公孙”,”仲孙”,”轩辕”,”令狐”,”钟离”,”宇文”,”长孙”,”慕容”,”鲜于”,”闾丘”,”司徒”,”司空”,”亓官”,”司寇”,”仉”,”督”,”子车”,”颛孙”,”端木”,”巫马”,”公西”,”漆雕”,”乐正”,”壤驷”,”公良”,”拓跋”,”夹谷”,”宰父”,”谷梁”,”晋”,”楚”,”闫”,”法”,”汝”,”鄢”,”涂”,”钦”,”段干”,”百里”,”东郭”,”南门”,”呼延”,”归”,”海”,”羊舌”,”微生”,”岳”,”帅”,”缑”,”亢”,”况”,”后”,”有”,”琴”,”梁丘”,”左丘”,”东门”,”西门”,”商”,”牟”,”佘”,”佴”,”伯”,”赏”,”南宫”,”墨”,”哈”,”谯”,”笪”,”年”,”爱”,”阳”,”佟”,”第五”,”言”,”福”}<br> 源自:<a href="https://zhidao.baidu.com/question/213833749.html" target="_blank" rel="noopener">百度知道-百家姓</a>.<br>可以找到比如从里面找到”万”这个姓的概率是$P_{“万”}(x)=\frac 1 {500}$.<br>那么你正好选中这个字的信息熵就等于$H(x)=log(\frac 1{500})\approx8.96$</p>
<h4 id="2-3-1方式的选择"><a href="#2-3-1方式的选择" class="headerlink" title="2.3.1方式的选择"></a>2.3.1方式的选择</h4><p>1、让人只能选择一张图片里面可以选择出来他的姓，根据信息论可以知道直选一次需要至少在500个字中选择。<br>由此可见，咱们不可能用500多张图去考一个人，而且这一点也不玄学。<br>2、我们采用两次选择图片则我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选两张图片里面可能有万这个姓的信息熵至少要达到4.48<br>那么至少需要$2^{4.48}=22.3$张图片，及两个22进制的选择提供给被测试者选择，大概就是从44张图片中选两张。<br>3、三次选择呢我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选三张图片里面可能有万这个姓的信息熵至少要达到2.98<br>那么至少需要$2^{2.98}=7.8$张图片，及3个8张图的选择提供给被测试者选择，大概就是从24张图片中选三张。这就给选择者降低了很多难度<br>4、四次选择呢我们可以有以下计算：<br>由于上诉我们已经知道找到万这个姓的信息熵是8.96<br>那么如果选三张图片里面可能有万这个姓的信息熵至少要达到2.24<br>那么至少需要$2^{2.98}=4.72$张图片，及3个5张图的选择提供给被测试者选择，大概就是从15张图片中选四张。这就给选择者更加降低了难度<br>5、同理咱么可以不断的增加选择次数可以选择9次<br>那么我们信息熵就可以是2张图选择9次：18张图选9张</p>
</blockquote>
<p>但是大家可能会困惑，那么为什么不采用更多的选择次数：<br>首先：选择次数为9时，每次选择图片的时候你需要从200多个里面选一个。<br>其次：当你选了3-4次在我看来是最好的，每次选择的字不会太多大概是32-64个里面选一个降低了选择难度，其次你给的信息少，更能够让你感觉到不可思议。</p>
<p>因此接下来我选择3次8选1，从中选择你的姓，你们可以选择其他方法进行实现。</p>
<h2 id="3-程序设计"><a href="#3-程序设计" class="headerlink" title="3. 程序设计"></a>3. 程序设计</h2><p>读者可以参考本文代码，将百家姓进行编码，通过程序咱们可以找到你的姓名。(3x8)<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">clear;</span><br><span class="line">Book_of_Family_Names = [<span class="string">"赵"</span>,<span class="string">"钱"</span>,<span class="string">"孙"</span>,<span class="string">"李"</span>,<span class="string">"周"</span>,<span class="string">"吴"</span>,<span class="string">"郑"</span>,<span class="string">"王"</span>,<span class="string">"冯"</span>,<span class="string">"陈"</span>,<span class="string">"褚"</span>,<span class="string">"卫"</span>,<span class="string">"蒋"</span>,<span class="string">"沈"</span>,<span class="string">"韩"</span>,<span class="string">"杨"</span>,<span class="string">"朱"</span>,<span class="string">"秦"</span>,<span class="string">"尤"</span>,<span class="string">"许"</span>,<span class="string">"何"</span>,<span class="string">"吕"</span>,<span class="string">"施"</span>,<span class="string">"张"</span>,<span class="string">"孔"</span>,<span class="string">"曹"</span>,<span class="string">"严"</span>,<span class="string">"华"</span>,<span class="string">"金"</span>,<span class="string">"魏"</span>,<span class="string">"陶"</span>,<span class="string">"姜"</span>,<span class="string">"戚"</span>,<span class="string">"谢"</span>,<span class="string">"邹"</span>,<span class="string">"喻"</span>,<span class="string">"柏"</span>,<span class="string">"水"</span>,<span class="string">"窦"</span>,<span class="string">"章"</span>,<span class="string">"云"</span>,<span class="string">"苏"</span>,<span class="string">"潘"</span>,<span class="string">"葛"</span>,<span class="string">"奚"</span>,<span class="string">"范"</span>,<span class="string">"彭"</span>,<span class="string">"郎"</span>,<span class="string">"鲁"</span>,<span class="string">"韦"</span>,<span class="string">"昌"</span>,<span class="string">"马"</span>,<span class="string">"苗"</span>,<span class="string">"凤"</span>,<span class="string">"花"</span>,<span class="string">"方"</span>,<span class="string">"俞"</span>,<span class="string">"任"</span>,<span class="string">"袁"</span>,<span class="string">"柳"</span>,<span class="string">"酆"</span>,<span class="string">"鲍"</span>,<span class="string">"史"</span>,<span class="string">"唐"</span>,<span class="string">"费"</span>,<span class="string">"廉"</span>,<span class="string">"岑"</span>,<span class="string">"薛"</span>,<span class="string">"雷"</span>,<span class="string">"贺"</span>,<span class="string">"倪"</span>,<span class="string">"汤"</span>,<span class="string">"滕"</span>,<span class="string">"殷"</span>,<span class="string">"罗"</span>,<span class="string">"毕"</span>,<span class="string">"郝"</span>,<span class="string">"邬"</span>,<span class="string">"安"</span>,<span class="string">"常"</span>,<span class="string">"乐"</span>,<span class="string">"于"</span>,<span class="string">"时"</span>,<span class="string">"傅"</span>,<span class="string">"皮"</span>,<span class="string">"卞"</span>,<span class="string">"齐"</span>,<span class="string">"康"</span>,<span class="string">"伍"</span>,<span class="string">"余"</span>,<span class="string">"元"</span>,<span class="string">"卜"</span>,<span class="string">"顾"</span>,<span class="string">"孟"</span>,<span class="string">"平"</span>,<span class="string">"黄"</span>,<span class="string">"和"</span>,<span class="string">"穆"</span>,<span class="string">"萧"</span>,<span class="string">"尹"</span>,<span class="string">"姚"</span>,<span class="string">"邵"</span>,<span class="string">"湛"</span>,<span class="string">"汪"</span>,<span class="string">"祁"</span>,<span class="string">"毛"</span>,<span class="string">"禹"</span>,<span class="string">"狄"</span>,<span class="string">"米"</span>,<span class="string">"贝"</span>,<span class="string">"明"</span>,<span class="string">"臧"</span>,<span class="string">"计"</span>,<span class="string">"伏"</span>,<span class="string">"成"</span>,<span class="string">"戴"</span>,<span class="string">"谈"</span>,<span class="string">"宋"</span>,<span class="string">"茅"</span>,<span class="string">"庞"</span>,<span class="string">"熊"</span>,<span class="string">"纪"</span>,<span class="string">"舒"</span>,<span class="string">"屈"</span>,<span class="string">"项"</span>,<span class="string">"祝"</span>,<span class="string">"董"</span>,<span class="string">"梁"</span>,<span class="string">"杜"</span>,<span class="string">"阮"</span>,<span class="string">"蓝"</span>,<span class="string">"闵"</span>,<span class="string">"席"</span>,<span class="string">"季"</span>,<span class="string">"麻"</span>,<span class="string">"强"</span>,<span class="string">"贾"</span>,<span class="string">"路"</span>,<span class="string">"娄"</span>,<span class="string">"危"</span>,<span class="string">"江"</span>,<span class="string">"童"</span>,<span class="string">"颜"</span>,<span class="string">"郭"</span>,<span class="string">"梅"</span>,<span class="string">"盛"</span>,<span class="string">"林"</span>,<span class="string">"刁"</span>,<span class="string">"钟"</span>,<span class="string">"徐"</span>,<span class="string">"邱"</span>,<span class="string">"骆"</span>,<span class="string">"高"</span>,<span class="string">"夏"</span>,<span class="string">"蔡"</span>,<span class="string">"田"</span>,<span class="string">"樊"</span>,<span class="string">"胡"</span>,<span class="string">"凌"</span>,<span class="string">"霍"</span>,<span class="string">"虞"</span>,<span class="string">"万"</span>,<span class="string">"支"</span>,<span class="string">"柯"</span>,<span class="string">"昝"</span>,<span class="string">"管"</span>,<span class="string">"卢"</span>,<span class="string">"莫"</span>,<span class="string">"经"</span>,<span class="string">"房"</span>,<span class="string">"裘"</span>,<span class="string">"缪"</span>,<span class="string">"干"</span>,<span class="string">"解"</span>,<span class="string">"应"</span>,<span class="string">"宗"</span>,<span class="string">"丁"</span>,<span class="string">"宣"</span>,<span class="string">"贲"</span>,<span class="string">"邓"</span>,<span class="string">"郁"</span>,<span class="string">"单"</span>,<span class="string">"杭"</span>,<span class="string">"洪"</span>,<span class="string">"包"</span>,<span class="string">"诸"</span>,<span class="string">"左"</span>,<span class="string">"石"</span>,<span class="string">"崔"</span>,<span class="string">"吉"</span>,<span class="string">"钮"</span>,<span class="string">"龚"</span>,<span class="string">"程"</span>,<span class="string">"嵇"</span>,<span class="string">"邢"</span>,<span class="string">"滑"</span>,<span class="string">"裴"</span>,<span class="string">"陆"</span>,<span class="string">"荣"</span>,<span class="string">"翁"</span>,<span class="string">"荀"</span>,<span class="string">"羊"</span>,<span class="string">"於"</span>,<span class="string">"惠"</span>,<span class="string">"甄"</span>,<span class="string">"麴"</span>,<span class="string">"家"</span>,<span class="string">"封"</span>,<span class="string">"芮"</span>,<span class="string">"羿"</span>,<span class="string">"储"</span>,<span class="string">"靳"</span>,<span class="string">"汲"</span>,<span class="string">"邴"</span>,<span class="string">"糜"</span>,<span class="string">"松"</span>,<span class="string">"井"</span>,<span class="string">"段"</span>,<span class="string">"富"</span>,<span class="string">"巫"</span>,<span class="string">"乌"</span>,<span class="string">"焦"</span>,<span class="string">"巴"</span>,<span class="string">"弓"</span>,<span class="string">"牧"</span>,<span class="string">"隗"</span>,<span class="string">"山"</span>,<span class="string">"谷"</span>,<span class="string">"车"</span>,<span class="string">"侯"</span>,<span class="string">"宓"</span>,<span class="string">"蓬"</span>,<span class="string">"全"</span>,<span class="string">"郗"</span>,<span class="string">"班"</span>,<span class="string">"仰"</span>,<span class="string">"秋"</span>,<span class="string">"仲"</span>,<span class="string">"伊"</span>,<span class="string">"宫"</span>,<span class="string">"宁"</span>,<span class="string">"仇"</span>,<span class="string">"栾"</span>,<span class="string">"暴"</span>,<span class="string">"甘"</span>,<span class="string">"钭"</span>,<span class="string">"厉"</span>,<span class="string">"戎"</span>,<span class="string">"祖"</span>,<span class="string">"武"</span>,<span class="string">"符"</span>,<span class="string">"刘"</span>,<span class="string">"景"</span>,<span class="string">"詹"</span>,<span class="string">"束"</span>,<span class="string">"龙"</span>,<span class="string">"叶"</span>,<span class="string">"幸"</span>,<span class="string">"司"</span>,<span class="string">"韶"</span>,<span class="string">"郜"</span>,<span class="string">"黎"</span>,<span class="string">"蓟"</span>,<span class="string">"薄"</span>,<span class="string">"印"</span>,<span class="string">"宿"</span>,<span class="string">"白"</span>,<span class="string">"怀"</span>,<span class="string">"蒲"</span>,<span class="string">"邰"</span>,<span class="string">"从"</span>,<span class="string">"鄂"</span>,<span class="string">"索"</span>,<span class="string">"咸"</span>,<span class="string">"籍"</span>,<span class="string">"赖"</span>,<span class="string">"卓"</span>,<span class="string">"蔺"</span>,<span class="string">"屠"</span>,<span class="string">"蒙"</span>,<span class="string">"池"</span>,<span class="string">"乔"</span>,<span class="string">"阴"</span>,<span class="string">"欎"</span>,<span class="string">"胥"</span>,<span class="string">"能"</span>,<span class="string">"苍"</span>,<span class="string">"双"</span>,<span class="string">"闻"</span>,<span class="string">"莘"</span>,<span class="string">"党"</span>,<span class="string">"翟"</span>,<span class="string">"谭"</span>,<span class="string">"贡"</span>,<span class="string">"劳"</span>,<span class="string">"逄"</span>,<span class="string">"姬"</span>,<span class="string">"申"</span>,<span class="string">"扶"</span>,<span class="string">"堵"</span>,<span class="string">"冉"</span>,<span class="string">"宰"</span>,<span class="string">"郦"</span>,<span class="string">"雍"</span>,<span class="string">"舄"</span>,<span class="string">"璩"</span>,<span class="string">"桑"</span>,<span class="string">"桂"</span>,<span class="string">"濮"</span>,<span class="string">"牛"</span>,<span class="string">"寿"</span>,<span class="string">"通"</span>,<span class="string">"边"</span>,<span class="string">"扈"</span>,<span class="string">"燕"</span>,<span class="string">"冀"</span>,<span class="string">"郏"</span>,<span class="string">"浦"</span>,<span class="string">"尚"</span>,<span class="string">"农"</span>,<span class="string">"温"</span>,<span class="string">"别"</span>,<span class="string">"庄"</span>,<span class="string">"晏"</span>,<span class="string">"柴"</span>,<span class="string">"瞿"</span>,<span class="string">"阎"</span>,<span class="string">"充"</span>,<span class="string">"慕"</span>,<span class="string">"连"</span>,<span class="string">"茹"</span>,<span class="string">"习"</span>,<span class="string">"宦"</span>,<span class="string">"艾"</span>,<span class="string">"鱼"</span>,<span class="string">"容"</span>,<span class="string">"向"</span>,<span class="string">"古"</span>,<span class="string">"易"</span>,<span class="string">"慎"</span>,<span class="string">"戈"</span>,<span class="string">"廖"</span>,<span class="string">"庾"</span>,<span class="string">"终"</span>,<span class="string">"暨"</span>,<span class="string">"居"</span>,<span class="string">"衡"</span>,<span class="string">"步"</span>,<span class="string">"都"</span>,<span class="string">"耿"</span>,<span class="string">"满"</span>,<span class="string">"弘"</span>,<span class="string">"匡"</span>,<span class="string">"国"</span>,<span class="string">"文"</span>,<span class="string">"寇"</span>,<span class="string">"广"</span>,<span class="string">"禄"</span>,<span class="string">"阙"</span>,<span class="string">"东"</span>,<span class="string">"殴"</span>,<span class="string">"殳"</span>,<span class="string">"沃"</span>,<span class="string">"利"</span>,<span class="string">"蔚"</span>,<span class="string">"越"</span>,<span class="string">"夔"</span>,<span class="string">"隆"</span>,<span class="string">"师"</span>,<span class="string">"巩"</span>,<span class="string">"厍"</span>,<span class="string">"聂"</span>,<span class="string">"晁"</span>,<span class="string">"勾"</span>,<span class="string">"敖"</span>,<span class="string">"融"</span>,<span class="string">"冷"</span>,<span class="string">"訾"</span>,<span class="string">"辛"</span>,<span class="string">"阚"</span>,<span class="string">"那"</span>,<span class="string">"简"</span>,<span class="string">"饶"</span>,<span class="string">"空"</span>,<span class="string">"曾"</span>,<span class="string">"毋"</span>,<span class="string">"沙"</span>,<span class="string">"乜"</span>,<span class="string">"养"</span>,<span class="string">"鞠"</span>,<span class="string">"须"</span>,<span class="string">"丰"</span>,<span class="string">"巢"</span>,<span class="string">"关"</span>,<span class="string">"蒯"</span>,<span class="string">"相"</span>,<span class="string">"查"</span>,<span class="string">"後"</span>,<span class="string">"荆"</span>,<span class="string">"红"</span>,<span class="string">"游"</span>,<span class="string">"竺"</span>,<span class="string">"权"</span>,<span class="string">"逯"</span>,<span class="string">"盖"</span>,<span class="string">"益"</span>,<span class="string">"桓"</span>,<span class="string">"公"</span>,<span class="string">"万俟"</span>,<span class="string">"司马"</span>,<span class="string">"上官"</span>,<span class="string">"欧阳"</span>,<span class="string">"夏侯"</span>,<span class="string">"诸葛"</span>,<span class="string">"闻人"</span>,<span class="string">"东方"</span>,<span class="string">"赫连"</span>,<span class="string">"皇甫"</span>,<span class="string">"尉迟"</span>,<span class="string">"公羊"</span>,<span class="string">"澹台"</span>,<span class="string">"公冶"</span>,<span class="string">"宗政"</span>,<span class="string">"濮阳"</span>,<span class="string">"淳于"</span>,<span class="string">"单于"</span>,<span class="string">"太叔"</span>,<span class="string">"申屠"</span>,<span class="string">"公孙"</span>,<span class="string">"仲孙"</span>,<span class="string">"轩辕"</span>,<span class="string">"令狐"</span>,<span class="string">"钟离"</span>,<span class="string">"宇文"</span>,<span class="string">"长孙"</span>,<span class="string">"慕容"</span>,<span class="string">"鲜于"</span>,<span class="string">"闾丘"</span>,<span class="string">"司徒"</span>,<span class="string">"司空"</span>,<span class="string">"亓官"</span>,<span class="string">"司寇"</span>,<span class="string">"仉"</span>,<span class="string">"督"</span>,<span class="string">"子车"</span>,<span class="string">"颛孙"</span>,<span class="string">"端木"</span>,<span class="string">"巫马"</span>,<span class="string">"公西"</span>,<span class="string">"漆雕"</span>,<span class="string">"乐正"</span>,<span class="string">"壤驷"</span>,<span class="string">"公良"</span>,<span class="string">"拓跋"</span>,<span class="string">"夹谷"</span>,<span class="string">"宰父"</span>,<span class="string">"谷梁"</span>,<span class="string">"晋"</span>,<span class="string">"楚"</span>,<span class="string">"闫"</span>,<span class="string">"法"</span>,<span class="string">"汝"</span>,<span class="string">"鄢"</span>,<span class="string">"涂"</span>,<span class="string">"钦"</span>,<span class="string">"段干"</span>,<span class="string">"百里"</span>,<span class="string">"东郭"</span>,<span class="string">"南门"</span>,<span class="string">"呼延"</span>,<span class="string">"归"</span>,<span class="string">"海"</span>,<span class="string">"羊舌"</span>,<span class="string">"微生"</span>,<span class="string">"岳"</span>,<span class="string">"帅"</span>,<span class="string">"缑"</span>,<span class="string">"亢"</span>,<span class="string">"况"</span>,<span class="string">"后"</span>,<span class="string">"有"</span>,<span class="string">"琴"</span>,<span class="string">"梁丘"</span>,<span class="string">"左丘"</span>,<span class="string">"东门"</span>,<span class="string">"西门"</span>,<span class="string">"商"</span>,<span class="string">"牟"</span>,<span class="string">"佘"</span>,<span class="string">"佴"</span>,<span class="string">"伯"</span>,<span class="string">"赏"</span>,<span class="string">"南宫"</span>,<span class="string">"墨"</span>,<span class="string">"哈"</span>,<span class="string">"谯"</span>,<span class="string">"笪"</span>,<span class="string">"年"</span>,<span class="string">"爱"</span>,<span class="string">"阳"</span>,<span class="string">"佟"</span>,<span class="string">"第五"</span>,<span class="string">"言"</span>,<span class="string">"福"</span>];</span><br><span class="line">save Book_of_Family_Names.mat  Book_of_Family_Names;</span><br><span class="line">%信息量 log <span class="number">500</span> <span class="number">9</span>   [<span class="number">1</span><span class="number">-8</span>][<span class="number">1</span><span class="number">-8</span>][<span class="number">1</span><span class="number">-8</span>]</span><br><span class="line">Names_code= [<span class="string">"赵"</span>,<span class="string">"钱"</span>,<span class="string">"孙"</span>,<span class="string">"李"</span>,<span class="string">"周"</span>,<span class="string">"吴"</span>,<span class="string">"郑"</span>,<span class="string">"王"</span>];</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">Names_code_N2(i,:)=Names_code;</span><br><span class="line">end</span><br><span class="line"><span class="keyword">for</span> i=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">Names_code_N3(i,:,:)=Names_code_N2;</span><br><span class="line">end</span><br><span class="line"><span class="keyword">for</span> a = <span class="number">1</span>:<span class="number">8</span></span><br><span class="line">    <span class="keyword">for</span> b=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">        <span class="keyword">for</span> c=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">            <span class="keyword">if</span> (a<span class="number">-1</span>)*<span class="number">8</span>^<span class="number">2</span>+(b<span class="number">-1</span>)*<span class="number">8</span>+c<span class="number">-1</span>&lt;length(Book_of_Family_Names)</span><br><span class="line">                Names_code_N(a,b,c)=Book_of_Family_Names((a<span class="number">-1</span>)*<span class="number">8</span>^<span class="number">2</span>+(b<span class="number">-1</span>)*<span class="number">8</span>+c);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                Names_code_N(a,b,c)= <span class="string">"猫"</span>;</span><br><span class="line">            end</span><br><span class="line">        end</span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> a=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">  <span class="keyword">for</span> b=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">        <span class="keyword">for</span> c=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">            figure(c)</span><br><span class="line">                    text(a*<span class="number">0.1</span>,b*<span class="number">0.1</span>,Names_code_N(a,b,c));  </span><br><span class="line">           hold on</span><br><span class="line">        end</span><br><span class="line">  end</span><br><span class="line"> end</span><br><span class="line"> </span><br><span class="line">a1=input(<span class="string">'choice the your Chinese name'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> a=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">  <span class="keyword">for</span> b=<span class="number">1</span>:<span class="number">8</span>                 </span><br><span class="line">        <span class="keyword">for</span> c=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">            figure(<span class="number">2</span>*b)</span><br><span class="line">                    text(a*<span class="number">0.1</span>,c*<span class="number">0.1</span>,Names_code_N(a,b,c));  </span><br><span class="line">            hold on</span><br><span class="line">        end</span><br><span class="line">  end</span><br><span class="line"> end</span><br><span class="line"> </span><br><span class="line">b1=input(<span class="string">'choice the your Chinese name'</span>);</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span> a=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">  <span class="keyword">for</span> b=<span class="number">1</span>:<span class="number">8</span>                 </span><br><span class="line">        <span class="keyword">for</span> c=<span class="number">1</span>:<span class="number">8</span></span><br><span class="line">            figure(<span class="number">3</span>*a)</span><br><span class="line">                    text(b*<span class="number">0.1</span>,c*<span class="number">0.1</span>,Names_code_N(a,b,c));  </span><br><span class="line">            hold on</span><br><span class="line">        end</span><br><span class="line">  end</span><br><span class="line"> end</span><br><span class="line"> </span><br><span class="line">c1=input(<span class="string">'choice the your Chinese name'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">disp(Names_code_N(a1,b2,c1));</span><br></pre></td></tr></table></figure></p>
<h2 id="4-图形用户界面设计"><a href="#4-图形用户界面设计" class="headerlink" title="4.图形用户界面设计"></a>4.图形用户界面设计</h2><ul>
<li><p>1.第一次选择<br><img src="https://img-blog.csdnimg.cn/20201023212813254.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li><p>2.第二次选择<br><img src="https://img-blog.csdnimg.cn/20201023215340588.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li><p>3.第三次选择</p>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/20201023215522191.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<ul>
<li><p>结果：<br><img src="https://img-blog.csdnimg.cn/20201023215814953.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li><p>[x] 你的姓是万对吗？</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">gantt</span><br><span class="line">        dateFormat  2020-10-23</span><br><span class="line">        title  不用告诉我就能知道你的姓</span><br><span class="line">        section 已经完成</span><br><span class="line">        已完成               :done,    des1, 2020-10-06,2020-10-16</span><br><span class="line">        进行中               :active,  des2, 2020-10-023, 3d</span><br><span class="line">        选择2               :         des3, after des2, 4d</span><br><span class="line">        选择3               :         des4, after des3, 2d</span><br></pre></td></tr></table></figure>
<h2 id="5-结论"><a href="#5-结论" class="headerlink" title="5.结论"></a>5.结论</h2><p>可以修改尝试进行4x4进行选择[4,4,4,4]</p>
<p> 源代码:<a href="https://zhidao.baidu.com/question/213833749.html" target="_blank" rel="noopener">不问知其名-赚点小积分</a>.</p>
]]></content>
      <categories>
        <category>普通设计</category>
      </categories>
      <tags>
        <tag>信息论</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>保研经历</title>
    <url>/2019/09/28/%E4%BF%9D%E7%A0%94%E7%BB%8F%E5%8E%86/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 请输入密码查看更多.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="359aabb14e88e16e2ab9c9ca968e7ab9fddf2b046b937cf98d86fdc2adc9c622"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>推免</tag>
        <tag>加密</tag>
      </tags>
  </entry>
  <entry>
    <title>强化学习</title>
    <url>/2020/11/20/%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Q-learning入门例程及Python实现"><a href="#Q-learning入门例程及Python实现" class="headerlink" title="Q-learning入门例程及Python实现"></a><center>Q-learning入门例程及Python实现</center></h1><p><strong>摘要：Q-learning算法是一种以马尔科夫决策作为理论基础与模型无关的强化学习算法。本文中会描述一个入门级强化学习例程，即房间连通性问题：根据房间的连通性与否及房间出口构建回报矩阵R。并通过python语言利用强化学习算法获得该场景下的评估矩阵Q，最后利用Q矩阵寻找最优路径。</strong><br><a id="more"></a></p>
<p>关键词：Q-learning；R矩阵；Q矩阵；最优路径决策</p>
<h2 id="一、从马尔科夫过程到Q学习"><a href="#一、从马尔科夫过程到Q学习" class="headerlink" title="一、从马尔科夫过程到Q学习"></a>一、从马尔科夫过程到Q学习</h2><p>标准的马尔科夫决策过程可以用一个五元组\<S,A,P,R,γ\> 表示，其中：</p>
<ul>
<li><p>S是一个离散有界的状态空间；</p>
</li>
<li><p>A是一个离散的动作空间；</p>
</li>
<li><p>P为状态转移概率函数，表示agent在状态s下选取动作a后转移到a’的概率；</p>
</li>
<li><p>R为回报函数，用于计算agent由当前状态 选取动作 后转移到下一状态<br>得到的立即回报值，由当前状态和选取的动作决定，体现了马尔科夫性的特点；</p>
</li>
<li><p>γ是折扣因子，用于确定延迟回报与立即回报的相对比例，<br>越大表明延迟回报的重要程度越高。</p>
</li>
</ul>
<p><img src="https://img-blog.csdnimg.cn/2019092420285149.png" width = "200" height = "40" alt="图片名称" align=center / loading="lazy"></p>
<p>马尔科夫决策问题的目标是找到一个策略<br>，使其回报函数的长期累积值的数学期望最大。其中，策略π只和状态相关，与时间无关（静态的）。<img src="https://img-blog.csdnimg.cn/20190924203953879.png" width = "15" height = "15" alt="图片名称" align=center / loading="lazy">是t时刻的环境状态，<img src="https://img-blog.csdnimg.cn/20190924204015148.png" width = "15" height = "15" alt="图片名称" align=center / loading="lazy">是t时刻选择的动作。根据Bellman最优准则，得到最优策略 对应的最优指标为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203036514.png" width = "200" height = "40" alt="图片名称" align=center / loading="lazy"></p>
<p>其中，R(s,a)为r(st,at)的数学期望，<img src="https://img-blog.csdnimg.cn/20190924203122905.png" width = "45" height = "20" alt="图片名称" align=center / loading="lazy">为在状态s下选取动作a后转移到下一状态状态s’的概率。由于某些环境中状态之间的转移概率P不容易获得，直接学习<img src="https://img-blog.csdnimg.cn/20190924203205467.png" width = "60" height = "20" alt="图片名称" align=center / loading="lazy">是很困难的，而Q学习不需要获取转移概率P，因而可用来解决此类具有马尔科夫性的问题。</p>
<p>Q学习是一种与环境无关的算法，是一种基于数值迭代的动态规划方法。定义一个Q函数作为评估函数：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203315691.png" width = "200" height = "30" alt="图片名称" align=center / loading="lazy"></p>
<p>评估函数Q(s,a)的函数值是从状态s开始选择第一个动作a执行后获得的最大累积回报的折算值，通俗地说，Q值等于立即回报值r(s,a)<br>加上遵循最优策略的折算值，此时的最优策略可改写为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203357997.png" width = "200" height = "30" alt="图片名称" align=center / loading="lazy"></p>
<p>该策略表达式的意义在于：如果agent用Q函数代替<img src="https://img-blog.csdnimg.cn/20190924204358289.png" width = "15" height = "15" alt="图片名称" align=center / loading="lazy">函数，就可以不考虑转移概率P，只考虑当前状态s的所有可供选择的动作a，并从中选出使Q(s,a)最大的动作，即agent对当前状态的部分Q值做出多次反应，便可以选出动作序列，使全局最优化。</p>
<p>在Q学习中，agent由初始状态转移到目标状态的过程称为“Episode”，即“场景”。Q函数可以表示为以下的迭代形式进行Q矩阵的更新：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203447849.png" width = "300" height = "30" alt="图片名称" align=center / loading="lazy"></p>
<p>在每一步的迭代中，上式又可写为：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203502753.png" width = "300" height = "30" alt="图片名称" align=center / loading="lazy"></p>
<p>即Q矩阵(st,at)位置元素的值等于回报函数R的相应值加上折扣因子γ乘以转换到下一个状态后最大的Q值。</p>
<p>上述的Q学习算法可以看出，当划分的状态有限时，每一场景开始时随机选择的初始状态s在算法的指导下探索环境，最终一定可以到达目标状态s*，回报函数R(s,a)是有界的，并且动作的选择能够使每个状态映射到动作对的访问是无限频率，则整个学习过程就能够训练出来。</p>
<p>Q学习通过对环境的不断探索，积累历史经验，agent通过不断试错来强化自身，最终可以达到自主选择最优动作的目标，即不论出于何种状态，都可给出到达目标状态的最优选择路径，该算法中环境和动作相互影响，动作的选择影响环境状态，环境也可以通过强化回报函数<br>来反馈动作的优劣性，影响动作的选择。</p>
<h2 id="二、由一个广为流传的小例子了解Q学习的算法逻辑"><a href="#二、由一个广为流传的小例子了解Q学习的算法逻辑" class="headerlink" title="二、由一个广为流传的小例子了解Q学习的算法逻辑"></a>二、由一个广为流传的小例子了解Q学习的算法逻辑</h2><p>一个由门连接的建筑物中有五个房间，如下图所示，分别用0-4号标识，将外界看作一个大房间，同样标识为5。</p>
<p><img src="https://img-blog.csdnimg.cn/20190924205406684.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center / loading="lazy"></p>
<p>每个房间代表一个节点，门代表连线，可以将上图抽象为下面这样：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924205532752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center / loading="lazy"><br>agent会被随机放置在任意一个房间里，然后从那个房间出发，一直走到建筑外（即5号房间为目标房间）。门是双向的，所以相邻节点间是双向箭头连接。通过门可以立即得到奖励值100，通过其他门奖励值为0。将所有箭头标注奖励值如下图：</p>
<p><img src="https://img-blog.csdnimg.cn/20190925124638361.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dsbV9weQ==,size_16,color_FFFFFF,t_70" width = "400" height = "200" alt="图片名称" align=center / loading="lazy"></p>
<p>在Q学习中，目标是达到奖励最高的状态，所以如果agent到达目标，它将永远在那里。这种类型的目标被称为“吸收目标”。</p>
<p>想象一下，我们的agent是一个想象的虚拟机器人，可以通过经验学习。<br>agent可以从一个房间转移到另一个房间，但它没有上帝视角，也不知道哪一扇门通向外面。</p>
<p>按照第一部分Q学习的理论，我们把每个房间抽象为一个状态，选择进入哪号房间作为动作，把状态图和即时奖励值放到下面的奖励值表“回报矩阵R”中：-1表示不可选择的动作，两个状态间没有连接）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R &#x3D; np.matrix([[-1, -1, -1, -1, 0, -1],  </span><br><span class="line">[-1, -1, -1, 0, -1, 100],  </span><br><span class="line">[-1, -1, -1, 0, -1, -1],  </span><br><span class="line">[-1, 0, 0, -1, 0, -1],  </span><br><span class="line">[ 0, -1, -1, 0, -1, 100],  </span><br><span class="line">[-1, 0, -1, -1, 0, 100]])</span><br></pre></td></tr></table></figure>
<p>现在我们将添加一个类似的矩阵“Q”给我们agent的大脑，代表了通过经验学到的东西的记忆。<br>矩阵Q的行表示agent的当前状态，列表示导致下一个状态的可能动作（节点之间的连线）。</p>
<p>agent开始什么都不知道，矩阵Q被初始化为零。<br>在这个例子中，为了解释简单，我们假设状态的数目是已知的（六个，0-5）。<br>如果我们不知道涉及多少个状态，矩阵Q可能从只有一个元素开始。<br>如果找到新的状态，则在矩阵Q中添加更多的列和行是一项简单的任务。</p>
<p>Q学习的更新规则如下：</p>
<p><img src="https://img-blog.csdnimg.cn/20190924203502753.png" width = "200" height = "30" alt="图片名称" align=center / loading="lazy"></p>
<p>根据这个公式，分配给矩阵Q的特定元素的值等于矩阵R中相应值加上学习参数γ乘以下一状态下所有可能动作的Q的最大值。</p>
<p>基于算法思想，训练Q矩阵的具体流程如下：</p>
<ul>
<li><p>步骤1.初始化仓库环境和算法参数（最大训练周期数，每一场景即为一个周期，折扣因子γ，即时回报函数R和评估矩阵Q。）。</p>
</li>
<li><p>步骤2.随机选择一个初始状态s，若s=s*，则结束此场景，重新选择初始状态。</p>
</li>
<li><p>步骤3.在当前状态s的所有可能动作中随机选择一个动作a，选择每一动作的概率相等。</p>
</li>
<li><p>步骤4.当前状态s选取动作a后到达状态s’。</p>
</li>
<li><p>步骤5.使用公式对Q矩阵进行更新。</p>
</li>
<li><p>步骤6.设置下一状态为当前状态，s=s‘。若s未达到目标状态，则转步骤3。</p>
</li>
<li><p>步骤7.如果算法未达到最大训练周期数，转步骤2进入下一场景。否则结束训练，此时得到训练完毕的收敛Q矩阵。</p>
</li>
</ul>
<p>上面的流程是给agent用来学习经验的。 每一场景都相当于一个培训课程。<br>在每个培训课程中, agent将探索环境 (由矩阵R表示), 接收奖励 (如果有),<br>直到达到目标状态。训练的目的是提高我们的agent的 “大脑”（矩阵 Q）。<br>场景越多，Q矩阵越优化。 在这种情况下, 如果矩阵 Q<br>得到了增强,四处探索时并不会在同一个房间进进出出,<br>agent将找到最快的路线到达目标状态。</p>
<p>参数γ的范围为0到1（0 \&lt;= γ\&lt; 1）。<br>如果γ接近零，agent将倾向于只考虑立即得到奖励值。<br>如果γ更接近1，那么agent将会考虑更多的权重，愿意延迟得到奖励。</p>
<p>一旦矩阵Q足够接近收敛状态，我们知道我们的agent已经学习了任意状态到达目标状态的最佳路径。</p>
<p>例如：</p>
<ul>
<li><p>从初始状态2开始，agent可以使用矩阵Q作为指导,从状态2开始，最大Q值表示选择进入状态3的动作。</p>
</li>
<li><p>从状态3开始，最大Q值表示有两种并列最优选择：进入状态1或4。假设我们任意选择去1。</p>
</li>
<li><p>从状态1开始，最大Q值表示选择进入状态5的动作。</p>
</li>
<li><p>因此，最优策略是2 - 3 - 1 - 5。</p>
</li>
</ul>
<p>我们使用Python为训练agent编写代码：<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">import numpy as np  </span><br><span class="line">import random  </span><br><span class="line">  </span><br><span class="line">\# 初始化矩阵  </span><br><span class="line">Q = np.<span class="built_in">zeros</span>((<span class="number">6</span>, <span class="number">6</span>))  </span><br><span class="line">Q = np.matrix(Q)  </span><br><span class="line">  </span><br><span class="line">def wan_find(list, col, list2):  </span><br><span class="line">col_max = <span class="number">0</span>  </span><br><span class="line">col_y = <span class="number">0</span>  </span><br><span class="line">col=col  </span><br><span class="line">\# a = np.linspace(0, 5, 5);  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> in [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]:  </span><br><span class="line"><span class="keyword">if</span> col_max \&lt; list[<span class="built_in">i</span>, col] and (<span class="built_in">i</span> not in list2):  </span><br><span class="line">col_y = <span class="built_in">i</span>  </span><br><span class="line">col_max = list[<span class="built_in">i</span>, col]  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">return</span> col_y, col_max  </span><br><span class="line">  </span><br><span class="line">\# 回报矩阵R  </span><br><span class="line">R = np.matrix([[<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>],  </span><br><span class="line">[<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">100</span>],  </span><br><span class="line">[<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>],  </span><br><span class="line">[<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>],  </span><br><span class="line">[ <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">100</span>],  </span><br><span class="line">[<span class="number">-1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">100</span>]])  </span><br><span class="line">  </span><br><span class="line">\# 设立学习参数  </span><br><span class="line">γ = <span class="number">0.8</span>  </span><br><span class="line">  </span><br><span class="line">\# 训练  </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span> in range(<span class="number">2000</span>):  </span><br><span class="line">\# 对每一个训练,随机选择一种状态  </span><br><span class="line">state = random.randint(<span class="number">0</span>, <span class="number">5</span>)  </span><br><span class="line"><span class="keyword">while</span> True:  </span><br><span class="line">\# 选择当前状态下的所有可能动作  </span><br><span class="line">r_pos_action = []  </span><br><span class="line"><span class="keyword">for</span> action in range(<span class="number">6</span>):  </span><br><span class="line"><span class="keyword">if</span> R[state, action] \&gt;= <span class="number">0</span>:  </span><br><span class="line">r_pos_action.append(action)  </span><br><span class="line">  </span><br><span class="line">next_state = r_pos_action[random.randint(<span class="number">0</span>, len(r_pos_action) - <span class="number">1</span>)]  </span><br><span class="line">Q[state, next_state] = R[state, next_state] + γ \* (Q[next_state]).max() \# 更新  </span><br><span class="line">state = next_state  </span><br><span class="line">\# 状态4位最优库存状态  </span><br><span class="line"><span class="keyword">if</span> state == <span class="number">5</span>:  </span><br><span class="line"><span class="keyword">break</span>  </span><br><span class="line">  </span><br><span class="line">Q1=np.<span class="built_in">zeros</span>((<span class="number">6</span>, <span class="number">6</span>))  </span><br><span class="line">Q1=Q/Q.<span class="built_in">max</span>();  </span><br><span class="line">print(Q1)  </span><br><span class="line">\#frist_place = input("请输入在那个地方:")  </span><br><span class="line">\#while frist_place!=5 :  </span><br><span class="line">  </span><br><span class="line">next_place = int(input(<span class="string">'初始房间号'</span>))  </span><br><span class="line">list2 = [next_place]  </span><br><span class="line"><span class="keyword">while</span> next_place != <span class="number">5</span>:  </span><br><span class="line">next_place, value = wan_find(Q1, next_place, list2)  </span><br><span class="line">list2.append(next_place)  </span><br><span class="line">print(list2)</span><br><span class="line"></span><br><span class="line">运行结果为：</span><br><span class="line"></span><br><span class="line">[[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.8</span> <span class="number">0.</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.64</span> <span class="number">0.</span> <span class="number">1.</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.64</span> <span class="number">0.</span> <span class="number">0.</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.</span> <span class="number">0.8</span> <span class="number">0.512</span> <span class="number">0.</span> <span class="number">0.8</span> <span class="number">0.</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.64</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.64</span> <span class="number">0.</span> <span class="number">1.</span> ]</span><br><span class="line"></span><br><span class="line">[<span class="number">0.</span> <span class="number">0.8</span> <span class="number">0.</span> <span class="number">0.</span> <span class="number">0.8</span> <span class="number">1.</span> ]]</span><br><span class="line"></span><br><span class="line">初始房间号<span class="number">2</span></span><br><span class="line"></span><br><span class="line">[<span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">5</span>]</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>matlab</tag>
        <tag>强化学习</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>个人简历</title>
    <url>/2020/07/22/%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 请输入密码查看更多.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="2a5ad2a781dd0082cb74531c7e4f79e4a9fdf70dfa54d29cd03a10e8a763a3aa"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>简历</category>
      </categories>
      <tags>
        <tag>加密</tag>
        <tag>万鲲鹏</tag>
        <tag>个人简历2019</tag>
      </tags>
  </entry>
  <entry>
    <title>深度学习_花书</title>
    <url>/2020/07/30/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0-%E8%8A%B1%E4%B9%A6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h1><a id="more"></a>
<p>&nbsp;&nbsp; 深度学习(DL, Deep Learning)是机器学习(ML, Machine Learning)领域中一个新的研究方向，它被引入机器学习使其更接近于最初的目标——人工智能(AI, Artificial Intelligence)。<br>&nbsp;&nbsp; 深度学习是学习样本数据的内在规律和表示层次，这些学习过程中获得的信息对诸如文字，图像和声音等数据的解释有很大的帮助。它的最终目标是让机器能够像人一样具有分析学习能力，能够识别文字、图像和声音等数据。 深度学习是一个复杂的机器学习算法，在语音和图像识别方面取得的效果，远远超过先前相关技术。<br>&nbsp;&nbsp; 深度学习在搜索技术，数据挖掘，机器学习，机器翻译，自然语言处理，多媒体学习，语音，推荐和个性化技术，以及其他相关领域都取得了很多成果。深度学习使机器模仿视听和思考等人类的活动，解决了很多复杂的模式识别难题，使得人工智能相关技术取得了很大进步。  </p>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>分类器</tag>
      </tags>
  </entry>
  <entry>
    <title>水声通信实验课程作业</title>
    <url>/2020/11/17/%E6%B0%B4%E5%A3%B0%E9%80%9A%E4%BF%A1%E8%AF%BE%E7%A8%8B/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">您好, 请输入密码查看更多.</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="f98905d0b4469b837ccca745b8403523ceeb9668a6251d06aff01b622e5d6139"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>matlab</tag>
        <tag>水声通信</tag>
        <tag>研究生课程</tag>
      </tags>
  </entry>
  <entry>
    <title>程序语法</title>
    <url>/2020/11/20/%E7%A8%8B%E5%BA%8F%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="编程语言语法"><a href="#编程语言语法" class="headerlink" title="编程语言语法"></a><center>编程语言语法</center></h1><a id="more"></a>
<div class="table-container">
<table>
<thead>
<tr>
<th>程序  类型  语法</th>
<th>python</th>
<th>C++/C</th>
<th>java</th>
<th>matlab</th>
</tr>
</thead>
<tbody>
<tr>
<td>或</td>
<td>or</td>
<td>\</td>
<td>\</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>与</td>
<td>and</td>
<td>&amp;&amp;</td>
<td></td>
<td></td>
</tr>
<tr>
<td>非</td>
<td>not</td>
<td>!</td>
<td></td>
<td></td>
</tr>
<tr>
<td>条件语句</td>
<td>if 条件 :  制表符 elseif 或elif:  制表符 else :  制表符</td>
<td>if (条件){   } else if() {  } else {  }</td>
<td></td>
<td></td>
</tr>
<tr>
<td>循环语句</td>
<td>1.for for x in [1,2,3,…] :  制表符 2.while while 循环条件:  制表符</td>
<td>1.for for(int i=0;i\&lt;10;i++){} 2.while while(条件){}  do{ }while(条件)</td>
<td></td>
<td></td>
</tr>
<tr>
<td>语句之间</td>
<td>制表符</td>
<td>{}</td>
<td></td>
<td></td>
</tr>
<tr>
<td>dict表</td>
<td>d = {‘Michael’: 95, ‘Bob’: 75, ‘Tracy’: 85}</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>set</td>
<td>s1 = set([1, 2, 3]) s2 = set([2, 3, 4]) print(s1 &amp; s2) print(s1 \</td>
<td>s2) s1.add(4) s1.remove(1)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>平方</td>
<td>import math math.sqrt(2)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>函数定义</td>
<td>def wan_find(list, col, list2):  col_max = 0  col_y = 0  col=col  # a = np.linspace(0, 5, 5);   for i in [0, 1, 2, 3, 4, 5]:  if col_max \&lt; list[i, col] and (i not in list2):  col_y = i  col_max = list[i, col]   return col_y, col_max</td>
<td>int wan_find(float list[][], int col,int list2){         }</td>
<td></td>
<td></td>
</tr>
<tr>
<td>默认参数</td>
<td>def product(x, y=1, z=1, k=1):  return x * y * z * k</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>递归函数</td>
<td>def fact(n):  return fact_iter(n, 1)  def fact_iter(num, product):  if num == 1:  return product  return fact_iter(num - 1, num * product)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>map</td>
<td>r =map(f, [1, 2, 3, 4, 5, 6, 7, 8, 9]) list(r)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>reduce</td>
<td>reduce(f, [x1, x2, x3, x4]) =  f(f(f(x1, x2), x3), x4)</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>filter</td>
<td>def is_odd(n):  return n % 2 == 1 r=filter(is_odd, [1, 2, 4, 5, 6, 9, 10, 15]) print(list(r))</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>快速排序</td>
<td>sorted([36, 5, -12, 9, -21], key=abs) key=abs按照绝对值排序</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>面向对象</td>
<td>class Student(object):   def _<em>init_</em>(self, name, score):  self.name = name  self.score = score   def print_score(self):  print(‘%s: %s’ % (self.name, self.score))   def get_grade(self):  if self.score >= 90:  return ‘A’  elif self.score >= 60:  return ‘B’  else:  return ‘C’</td>
<td></td>
<td></td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>程序设计</tag>
        <tag>matlab</tag>
        <tag>python</tag>
        <tag>c</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>网站视频下载及按帧将视频转为jpg</title>
    <url>/2020/10/15/%E7%BD%91%E7%AB%99%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E5%8F%8A%E6%8C%89%E5%B8%A7%E8%BD%AC%E4%B8%BAjpg/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="网站视频下载及按帧转为jpg"><a href="#网站视频下载及按帧转为jpg" class="headerlink" title="网站视频下载及按帧转为jpg"></a>网站视频下载及按帧转为jpg</h1><h2 id="1、准备切割视频"><a href="#1、准备切割视频" class="headerlink" title="1、准备切割视频"></a>1、准备切割视频</h2><p>视频切割算法:<br><figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">clc;</span><br><span class="line">clear;</span><br><span class="line"><span class="comment">%读取视频</span></span><br><span class="line">video_file=<span class="string">'D:\1.mp4'</span>;</span><br><span class="line">obj=VideoReader(video_file);</span><br><span class="line">frame_num=obj.NumberOfFrames;<span class="comment">%一共有多少帧</span></span><br><span class="line"><span class="comment">% 分离图片</span></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">i</span>=<span class="number">1</span>:<span class="number">15</span><span class="comment">%读取前15帧</span></span><br><span class="line">    img=strcat(<span class="string">'D:\picture\',num2str(i));</span></span><br><span class="line"><span class="string">    img=strcat(img,'</span>.jpg');</span><br><span class="line">    I=read(obj,<span class="built_in">i</span>);<span class="comment">%读出第15帧图片</span></span><br><span class="line">    imwrite(I,strcat(<span class="string">'D:\picture\',num2str(i),'</span>.jpg'),<span class="string">'jpg'</span>);<span class="comment">% 保存帧</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2、问题"><a href="#2、问题" class="headerlink" title="2、问题"></a>2、问题</h2><h4 id="考虑使用-you-get下载视频"><a href="#考虑使用-you-get下载视频" class="headerlink" title="考虑使用 you-get下载视频"></a>考虑使用 you-get下载视频</h4><ol>
<li>首先安装<br><kbd>pip install you-get</kbd></li>
<li>下载<br><kbd>you-get -i [URL]</kbd><br>-i:查看可以下载的详细信息<br><kbd>you-get —format=dash-flv  [URL]</kbd></li>
</ol>
<p>以此方法可以直接下载大部分网站上的视频。</p>
<h4 id="例子：以小鲤鱼历险记为例bilibili"><a href="#例子：以小鲤鱼历险记为例bilibili" class="headerlink" title="例子：以小鲤鱼历险记为例bilibili"></a>例子：以小鲤鱼历险记为例<a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837" target="_blank" rel="noopener">bilibili</a></h4><ol>
<li>直接通过you-get进行下载<br>下载到的文件一般是flv需要解码，不能直接读取。<br><kbd>you-get <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201120164038867.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<ol>
<li><p>通过you-get -i 获取视频信息<br>找到需求的部分，本例使用小鲤鱼历险记mp4、720p为例。<br><kbd>you-get -i <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd><br><img src="https://img-blog.csdnimg.cn/20201120164038873.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
</li>
<li><p>通过you-get —format=dash-flv  获取视频信息<br>找到需求的部分，本例使用小鲤鱼历险记mp4、720p为例。 </p>
</li>
</ol>
<p><kbd>you-get —format=dash-720  <a href="https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Ns411r7cX?from=search&amp;seid=2589828094683508837</a></kbd></p>
<p><img src="https://img-blog.csdnimg.cn/20201120164038865.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<ol>
<li>下载下来的文件地址为终端所在地址：<br>本文中为<kbd>E:\Users\root\【720p】小鲤鱼历险记【2006】【完结】【无水印高清】 (P1. 小鲤鱼历险记 01)[00].mp4</kbd></li>
</ol>
<p><img src="https://img-blog.csdnimg.cn/20201120164038861.JPG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNTA4Njcz,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述" loading="lazy"></p>
<h4 id="hevc未安装"><a href="#hevc未安装" class="headerlink" title="hevc未安装"></a>hevc未安装</h4><p>导致matlab无法读取下载的软件</p>
<h2 id="3、方法"><a href="#3、方法" class="headerlink" title="3、方法"></a>3、方法</h2><p>1、安装codec，网上有很多hevc但是目前免费办法中国区无法下载，于是参考很多文章后选择下载codec。</p>
<p>参考：</p>
<ul>
<li><ol>
<li><a href="http://www.codecguide.com/download_k-lite_codec_pack_basic.htm" target="_blank" rel="noopener">http://www.codecguide.com/download_k-lite_codec_pack_basic.htm</a></li>
</ol>
</li>
<li><ol>
<li><a href="https://www.jianshu.com/p/dd7f04c27a79" target="_blank" rel="noopener">https://www.jianshu.com/p/dd7f04c27a79</a></li>
</ol>
</li>
<li><ol>
<li><a href="https://mmrslwan1110.github.io" target="_blank" rel="noopener">https://mmrslwan1110.github.io</a></li>
</ol>
</li>
</ul>
]]></content>
      <categories>
        <category>辅助技术</category>
      </categories>
      <tags>
        <tag>matlab</tag>
        <tag>视频</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习</title>
    <url>/2020/11/20/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a><center>机器学习</center></h1><a id="more"></a>
<h2 id="6-支持向量机"><a href="#6-支持向量机" class="headerlink" title="6 支持向量机"></a>6 支持向量机</h2><h3 id="6-1-间隔与支持向量"><a href="#6-1-间隔与支持向量" class="headerlink" title="6.1 间隔与支持向量"></a>6.1 间隔与支持向量</h3><ol>
<li>问题<br>给定训练样本 <script type="math/tex">D=\lbrace(x_1,y_1),(x_1,y_1),...,(x_m,y_m)\rbrace,y_i\in \lbrace{-1,+1}\rbrace</script>分类学习的关键就是基于训练集找出一个划分超平面，将不同类别的样本分开，而这种平面很多，如何选择最好的划分超平面？</li>
</ol>
<p><img src="https://www.codekp.cn/download/img/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E8%B6%85%E5%B9%B3%E9%9D%A2%E5%88%92%E5%88%86%E8%AE%AD%E7%BB%83%E9%9B%86.PNG" width = "681" height = "302" alt="图片名称" align=center / loading="lazy"></p>
<center>
图6.1存在划分超平面将两个训练样本分开
</center>


<p>正中间那根具有更强的鲁棒性，对未示例的泛化能力更强，因此会获得更好的性能。<br>划分超平面可以通过如下线性方程来描述：</p>
<script type="math/tex; mode=display">w^Tx+b=0</script><p>其中<script type="math/tex">w=(w_1;w_2;...;w_d)</script>为法向量决定平面的方向，b为位移向项决定平面距离原点的距离。<br>其中任意一点到超平面的距离可写为</p>
<script type="math/tex; mode=display">
r = \frac{|w^Tx+b|}{||w||}</script><ol>
<li>支持向量<br>距离划分超平面最近的几个训练样本点。且这些点满足以下不等式。<script type="math/tex; mode=display">w^Tx_i+b\geq+1,  y_i=+1\\
w^Tx_i+b\leq-1,  y_i=+1</script></li>
<li>间隔<br>两个异类支持向量到超平面的距离之和：<script type="math/tex; mode=display">r=\frac{2}{||w||}</script></li>
<li>最大间隔<br>对应的划分超平面 <script type="math/tex; mode=display">max(r=\frac{2}{||w||})  \\s.t. y_i(w^Tx_i+b)\geq1,i=1,2,...,m</script></li>
<li>最小间隔<br>支持向量机基本型<script type="math/tex; mode=display">min(r=\frac{2}{||w||}) \\s.t. y_i(w^Tx_i+b)\geq1,i=1,2,...,m</script></li>
</ol>
<h3 id="6-2-对偶问题"><a href="#6-2-对偶问题" class="headerlink" title="6.2 对偶问题"></a>6.2 对偶问题</h3><h4 id="6-2-1-对偶问题"><a href="#6-2-1-对偶问题" class="headerlink" title="6.2.1 对偶问题"></a>6.2.1 对偶问题</h4><p>  突二次规划问题</p>
<h4 id="6-2-2-对偶问题"><a href="#6-2-2-对偶问题" class="headerlink" title="6.2.2 对偶问题"></a>6.2.2 对偶问题</h4><ol>
<li>更有效求解参数w和b的方法:拉格朗日乘子法<br>对svm基本型式子</li>
</ol>
]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>信息论</tag>
        <tag>matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>矩阵分析引论</title>
    <url>/2020/11/17/%E7%9F%A9%E9%98%B5%E8%AE%BA/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="矩阵分析引论"><a href="#矩阵分析引论" class="headerlink" title="矩阵分析引论"></a><center>矩阵分析引论</center></h1><h2 id="Introduction-to-matrix-analysis"><a href="#Introduction-to-matrix-analysis" class="headerlink" title=" Introduction to matrix analysis "></a><center> Introduction to matrix analysis </center></h2><center>

<img src="https://www.codekp.cn/download/img/矩阵论/目录.png" width = "400" height = "302" alt="图片名称" align=center / loading="lazy">
</center>

<a id="more"></a>
<h2 id="1-线性空间与线性变换"><a href="#1-线性空间与线性变换" class="headerlink" title="1.线性空间与线性变换"></a>1.线性空间与线性变换</h2><ol>
<li>对加减乘除封闭的集合被称之为数域。矩阵论中较常用的数域是QRC。其中Q:有理数域、R:实数数域、C复数数域。</li>
</ol>
<p>参考视频教程：</p>
<div style="position:relative; padding-bottom:75%; width:100%; height:0">
    <iframe src="//player.bilibili.com/player.html?aid=11355346&bvid=BV19x411878L&cid=18777309&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position:absolute; height: 100%; width: 100%;"> </iframe>
</div>]]></content>
      <categories>
        <category>研究生课程</category>
      </categories>
      <tags>
        <tag>研究生课程</tag>
        <tag>矩阵论</tag>
      </tags>
  </entry>
</search>
